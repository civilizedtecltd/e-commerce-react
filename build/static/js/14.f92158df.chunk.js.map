{"version":3,"sources":["components/UserNav/UserNav.js","components/FromComponents/inputComponent2.jsx","pages/users/UserProfile.jsx"],"names":["UserNav","sm","className","id","asideMenu","map","data","index","key","NavItem","nav_item","ClassName","class","Title","title","Url","url","IconName","icon_name","ActiveClassName","active_link","InputFrom","LabelId","TypeName","LabelTitle","Name","Value","Placeholder","handleOnChange","Form","Group","Label","htmlFor","Control","type","name","value","placeholder","onChange","SelectFrom","categories","callback","useState","categoryId","setCategoryId","useEffect","state","JSON","parse","window","localStorage","getItem","category_id","auth","user","as","event","preventDefault","Number","target","style","borderColor","undefined","element","category","connect","site","status","cart","shop","favorite","dispatch","getUser","updateUser","info","update","removeStatus","emptyStatus","subscriptions","email","getSubscriptions","props","items","message","success","alert","setAlert","formData","setFormData","totalFavorite","length","totalItem","clearAlert","setTimeout","clearTimeout","e","loading","pending","Header","favorite_item","cartItem","menuActive","MobileHeader","Container","fluid","Row","noGutters","Col","Card","Body","first_name","last_name","phone","password","new_password","repeat_new_password","Alert","show","variant","onClose","dismissible","Button","onClick","isEmpty","String"],"mappings":"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","file":"static/js/14.f92158df.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Col } from 'react-bootstrap'\r\nimport Menu from '../LiComponent/MenuComponents'\r\nimport asideMenu from \"../../inc/menu/order_nav_menu\";\r\n\r\nfunction UserNav() {\r\n  return (\r\n    <Col sm=\"2\">\r\n      <aside className=\"userAsideBar pt-3 clearfix shadow\" id=\"userAsideBar\">\r\n        <nav className=\"userNav\">\r\n          <ul className=\"userNavBar\">\r\n            {asideMenu.map((data, index) =>\r\n              <Menu\r\n                key={index}\r\n                NavItem={data.nav_item}\r\n                ClassName={data.class}\r\n                Title={data.title}\r\n                Url={data.url}\r\n                IconName={data.icon_name}\r\n                ActiveClassName={data.active_link}\r\n              />\r\n            )}\r\n          </ul>\r\n        </nav>\r\n      </aside>\r\n    </Col>\r\n  );\r\n}\r\n\r\nexport default UserNav;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Form } from 'react-bootstrap';\r\n\r\nfunction InputFrom({ LabelId, TypeName, LabelTitle, Name, Value, Placeholder, ClassName, handleOnChange }) {\r\n\r\n    return (\r\n        <Form.Group className={ClassName}>\r\n            <Form.Label htmlFor={LabelId} > {LabelTitle} </Form.Label>\r\n            <Form.Control type={TypeName} id={LabelId} name={Name} value={(Value)? Value : ''} placeholder={Placeholder} onChange={handleOnChange} />\r\n        </Form.Group>\r\n    )\r\n}\r\n\r\n//Select From Components\r\nfunction SelectFrom({ LabelTitle, categories, callback }) {\r\n\r\n    const [categoryId, setCategoryId] = useState(0);\r\n\r\n    useEffect(() => {\r\n        const state = JSON.parse(window.localStorage.getItem('state'));\r\n        const category_id = (state !== null && state.auth.user.category_id) ? state.auth.user.category_id : 0;\r\n        setCategoryId(category_id);\r\n    }, []);\r\n\r\n    const handleOnchange = (event) => {\r\n        event.preventDefault();\r\n        setCategoryId(Number(event.target.value));\r\n        callback({\r\n            category_id: event.target.value\r\n        });\r\n        return ((event.target.value === 'Select Category') ? (event.target.style.borderColor = 'rgb(255,0,97)') : event.target.style.borderColor = '');\r\n    }\r\n\r\n    return (\r\n        <Form.Group>\r\n            <Form.Label> {LabelTitle} </Form.Label>\r\n            <Form.Control as=\"select\" value={categoryId} onChange={handleOnchange}>\r\n                <option value={0}>Select Category</option>\r\n                {(categories === undefined) ? [] : categories.map((element, index) => (\r\n                    <option\r\n                        key={index}\r\n                        id={index}\r\n                        value={element.id}\r\n                    >\r\n                        {element.category}\r\n                    </option>\r\n                ))}\r\n            </Form.Control>\r\n        </Form.Group>\r\n    )\r\n}\r\n\r\n\r\nexport {\r\n    InputFrom,\r\n    SelectFrom\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { connect  } from 'react-redux';\r\nimport {getUser, update, emptyStatus} from '../../redux/actions/authActions';\r\nimport isEmpty from 'lodash/isEmpty';\r\nimport {Container, Row, Col, Card, Form, Button, Alert} from 'react-bootstrap';\r\nimport { InputFrom, SelectFrom } from '../../components/FromComponents/inputComponent2';\r\nimport  HeaderComponent from \"../../components/header/Header\";\r\nimport  MobileHeader from \"../../components/header/MobileHeader\";\r\nimport UserNav from \"../../components/UserNav/UserNav\";\r\nimport PageLoader from \"../../components/pageLoader/PageLoaderComponent\";\r\nimport './assets/css/user.css';\r\nimport { getSubscriptions } from '../../redux/actions/siteActions'\r\n\r\nconst UserProfile = (props) => {\r\n\r\n  const { auth: { user }, favorite: { items }, cart, status: { message, success }, getUser, subscriptions } = props;\r\n\r\n    const [alert, setAlert] = useState({status: false, type: 'danger', message: ''});\r\n    const [formData, setFormData] = useState({...user});\r\n    const totalFavorite = items.length;\r\n    const totalItem = cart.length;\r\n\r\n    useEffect(() => {\r\n\r\n        const clearAlert = setTimeout(() => {\r\n            props.removeStatus();\r\n            setAlert({status: false, message:''});\r\n        }, 5000);\r\n\r\n        if(typeof success !== undefined && success === false){\r\n            setAlert({\r\n                status: true,\r\n                type: 'danger',\r\n                message: message\r\n            });\r\n            return () =>  clearTimeout(clearAlert);\r\n        }else if(typeof success !== undefined && success === true){\r\n            setAlert({\r\n                status: true,\r\n                type: 'success',\r\n                message: message\r\n            });\r\n            return () =>  clearTimeout(clearAlert);\r\n        }\r\n\r\n        getUser();\r\n        subscriptions(user.email);\r\n    }, [getUser, message, success]);\r\n\r\n\r\n    const categoryData = (data) => {\r\n        if(data.category_id !== undefined || data.category_id !== 'Select Category')\r\n            formData.category_id = Number(data.category_id);\r\n    }\r\n\r\n    //console.log('form data: ', formData);\r\n\r\n    const handleOnChange = (e) => {\r\n        e.preventDefault();        \r\n        setFormData({\r\n            ...formData,\r\n            [e.target.name] : e.target.value\r\n        });\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        const clearAlert = setTimeout(() => {\r\n            setAlert({status: false, message:''});\r\n        }, 5000);\r\n\r\n        if(isEmpty(formData)){\r\n            setAlert({\r\n                status: true,\r\n                type: 'info',\r\n                message: 'Nothing changed and updated.'\r\n            });\r\n\r\n            return () =>  clearTimeout(clearAlert);\r\n        }\r\n\r\n        if( formData.new_password !== undefined ){\r\n            if(formData.password !== undefined ){\r\n\r\n                if(String(formData.new_password) !== String(formData.repeat_new_password)){\r\n                   setAlert({\r\n                       status: true,\r\n                       type: 'danger',\r\n                       message: 'New and Repeat Passwords did not match.'\r\n                   });\r\n                   return () =>  clearTimeout(clearAlert);\r\n                }\r\n            }else {\r\n                setAlert({\r\n                    status: true,\r\n                    type: 'danger',\r\n                    message: 'Enter Current Password to set new Password.'\r\n                });\r\n                return () =>  clearTimeout(clearAlert);\r\n            }\r\n        }\r\n                \r\n        props.updateUser(formData);\r\n    }\r\n\r\n  return (\r\n    <>\r\n      <PageLoader loading={props.favorite.pending} />\r\n      <div className=\"allWrapper\">\r\n        <HeaderComponent\r\n          favorite_item={totalFavorite}\r\n          cartItem={totalItem}\r\n          menuActive={true}\r\n        />\r\n        <MobileHeader favorite_item={totalFavorite} cartItem={totalItem} />\r\n        <div className=\"userBodyArea clearfix\" id=\"userBodyArea\">\r\n          <Container fluid={true} className=\"pl-0 pr-0\">\r\n            <Row noGutters>\r\n              <UserNav />\r\n              <Col>\r\n                <main\r\n                  className=\"userMainContent clearfix bgImage bgImg03\"\r\n                  id=\"userMainContent\"\r\n                >\r\n                  <section\r\n                    className=\"myOrderArea secGap clearfix\"\r\n                    id=\"myOrderArea\"\r\n                  >\r\n                    <Container fluid={true}>\r\n                      <Row>\r\n                        <Col>\r\n                          <Card>\r\n                            <Card.Body>\r\n                              <div\r\n                                className=\"userProfileBody clearfix\"\r\n                                id=\"userProfileBody\"\r\n                              >\r\n                                <h2 className=\"cardSecTitle mb-4\">\r\n                                  Profile settings\r\n                                </h2>\r\n                                <Form className=\"profileSettingsForm\">\r\n                                  <Row>\r\n                                    <Col sm=\"6\">\r\n                                      <SelectFrom\r\n                                        LabelTitle=\"Category\"\r\n                                        categories={\r\n                                          props.categories !== undefined\r\n                                            ? props.categories\r\n                                            : []\r\n                                        }\r\n                                        callback={categoryData}\r\n                                      />\r\n                                    </Col>\r\n\r\n                                    <Col sm=\"6\">\r\n                                      <InputFrom\r\n                                        LabelTitle=\"First Name\"\r\n                                        TypeName=\"text\"\r\n                                        Name=\"first_name\"\r\n                                        Value={formData.first_name}\r\n                                        Placeholder=\"First Name\"\r\n                                        handleOnChange = {handleOnChange}\r\n                                      />\r\n                                    </Col>\r\n\r\n                                    <Col sm=\"6\">\r\n                                      <InputFrom\r\n                                        LabelTitle=\"Last Name\"\r\n                                        TypeName=\"text\"\r\n                                        Name=\"last_name\"\r\n                                        Value={formData.last_name}\r\n                                        Placeholder=\"Last Name\"\r\n                                       handleOnChange = {handleOnChange}\r\n                                      />\r\n                                    </Col>\r\n\r\n                                    <Col sm=\"6\">\r\n                                      <InputFrom\r\n                                        LabelTitle=\"Email Address\"\r\n                                        TypeName=\"email\"\r\n                                        Name=\"email\"\r\n                                        Value={formData.email}\r\n                                        Placeholder=\"Email Address\"\r\n                                        handleOnChange = {handleOnChange}\r\n                                      />\r\n                                    </Col>\r\n\r\n                                    <Col sm=\"6\">\r\n                                      <InputFrom\r\n                                        LabelTitle=\"Phone Number\"\r\n                                        TypeName=\"text\"\r\n                                        Name=\"phone\"\r\n                                        Value={formData.phone}\r\n                                        Placeholder=\"Phone Number\"\r\n                                       handleOnChange = {handleOnChange}\r\n                                      />\r\n                                    </Col>\r\n\r\n                                    <Col sm=\"12\">\r\n                                      <hr className=\"hrBorder\" />\r\n                                    </Col>\r\n\r\n                                    <Col sm=\"6\">\r\n                                      <InputFrom\r\n                                        LabelTitle=\"Current Password\"\r\n                                        TypeName=\"password\"\r\n                                        Name=\"password\"\r\n                                        Value={formData.password}\r\n                                        Placeholder=\"Current Password\"\r\n                                       handleOnChange = {handleOnChange}\r\n                                      />\r\n                                    </Col>\r\n\r\n                                    <Col sm=\"6\">\r\n                                      <InputFrom\r\n                                        LabelTitle=\"Create New Password\"\r\n                                        TypeName=\"password\"\r\n                                        Name=\"new_password\"\r\n                                        Value={formData.new_password}\r\n                                        Placeholder=\"Create New Password\"\r\n                                        handleOnChange = {handleOnChange}\r\n                                      />\r\n                                    </Col>\r\n\r\n                                    <Col sm=\"6\">\r\n                                      <InputFrom\r\n                                        LabelTitle=\"Repeat new password\"\r\n                                        TypeName=\"password\"\r\n                                        Name=\"repeat_new_password\"\r\n                                        Value={formData.repeat_new_password}\r\n                                        Placeholder=\"Repeat new password\"\r\n                                       handleOnChange = {handleOnChange}\r\n                                      />\r\n                                    </Col>\r\n\r\n                                    <Col sm=\"12\">\r\n                                      <Alert\r\n                                        show={alert.status}\r\n                                        variant={alert.type}\r\n                                        onClose={() =>\r\n                                          setAlert({ ...alert, status: false })\r\n                                        }\r\n                                        dismissible\r\n                                      >\r\n                                        <p>{alert.message}</p>\r\n                                      </Alert>\r\n                                      <Button\r\n                                        type=\"submit\"\r\n                                        className=\"primary\"\r\n                                        onClick={handleSubmit}\r\n                                      >\r\n                                        Save\r\n                                      </Button>\r\n                                    </Col>\r\n                                  </Row>\r\n                                </Form>\r\n                              </div>\r\n                            </Card.Body>\r\n                          </Card>\r\n                        </Col>\r\n                      </Row>\r\n                    </Container>\r\n                  </section>\r\n                </main>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n\r\n    categories: state.site.categories,\r\n    auth: state.auth,\r\n    status: state.auth.status,\r\n    cart: state.shop.cart,\r\n    favorite: state.favorite,\r\n\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    getUser         : () => dispatch(getUser()),\r\n    updateUser      : (info) => dispatch(update(info)),\r\n    removeStatus    : () => dispatch(emptyStatus()),\r\n    subscriptions   : (email) => dispatch(getSubscriptions(email)),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserProfile);\r\n"],"sourceRoot":""}