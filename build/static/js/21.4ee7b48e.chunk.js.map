{"version":3,"sources":["components/FromComponents/InputComponent.jsx","pages/auth/VerifyCode.jsx"],"names":["InputFrom","LabelId","TypeName","LabelTitle","Name","Value","Placeholder","ClassName","handleOnchange","Group","className","Label","htmlFor","Control","type","id","name","value","placeholder","onChange","withRouter","props","useState","code","state","setState","show","message","alert","setAlert","loading","fluid","sm","to","e","preventDefault","target","variant","onClose","dismissible","onClick","axios","post","URL","_VERIFICATION_CODE","then","res","data","setTimeout","success","history","push","catch","error","response"],"mappings":"yHAAA,+DAGA,SAASA,EAAT,GAA6G,IAAvFC,EAAsF,EAAtFA,QAASC,EAA6E,EAA7EA,SAAUC,EAAmE,EAAnEA,WAAYC,EAAuD,EAAvDA,KAAMC,EAAiD,EAAjDA,MAAOC,EAA0C,EAA1CA,YAAaC,EAA6B,EAA7BA,UAAWC,EAAkB,EAAlBA,eACtF,OACI,kBAAC,IAAKC,MAAN,CAAYC,UAAaH,GACrB,kBAAC,IAAKI,MAAN,CAAYC,QAAWX,GAAvB,IAAmCE,EAAnC,KACA,kBAAC,IAAKU,QAAN,CAAcC,KAAQZ,EAAUa,GAAMd,EAASe,KAAMZ,EAAMa,MAAOZ,GAAS,GAAIa,YAAaZ,EAAaa,SAAYX,O,2NCwFlHY,uBAvFI,SAACC,GAClB,MAA0BC,mBAAS,CAAEC,KAAM,OAA3C,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0BH,mBAAS,CAAEI,MAAM,EAAOC,QAAS,KAA3D,mBAAOC,EAAP,KAAcC,EAAd,KAuBA,OACE,oCACE,kBAAC,IAAD,CAAYC,SAAS,IACrB,yBAAKpB,UAAU,yBACb,4BAAQA,UAAU,6BAA6BK,GAAG,UAChD,kBAAC,IAAD,CAAWgB,OAAO,GAChB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,GAAI,GACP,yBAAKtB,UAAU,yBACb,wBAAIA,UAAU,YACZ,kBAAC,OAAD,CAAMuB,GAAG,KAAT,cAOZ,0BACEvB,UAAU,wDACVK,GAAG,kBAEH,kBAAC,IAAD,CAAWgB,OAAO,GAChB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,GAAI,GACP,yBAAKtB,UAAU,iCAAiCK,GAAG,aACjD,wBAAIL,UAAU,kBAAd,eACA,2HAKF,yBAAKA,UAAU,uBAAuBK,GAAG,eACvC,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEd,QAAQ,aACRC,SAAS,OACTC,WAAW,cACXC,KAAK,OACLE,YAAY,cACZE,eA5DG,SAAC0B,GACtBA,EAAEC,iBACFV,EAAS,2BAAKD,GAAN,kBAAcU,EAAEE,OAAOpB,KAAOkB,EAAEE,OAAOnB,YA8D7B,kBAAC,IAAD,CAAOS,KAAME,EAAMF,KAAMW,QAAST,EAAMd,KAAMwB,QAAS,kBAAMT,EAAS,CAAEH,MAAM,KAAUa,aAAW,GACjG,2BAAIX,EAAMD,UAId,kBAAC,IAAD,CAAQb,KAAK,SAASJ,UAAU,0BAA0B8B,QAhEvD,SAACN,GACpBA,EAAEC,iBACFM,IAAMC,KAAKC,IAAIC,mBAAoBpB,GAChCqB,MAAK,SAAAC,GAGJ,OAFAjB,EAAS,CAAEH,MAAM,EAAMZ,KAAM,UAAWa,QAASmB,EAAIC,KAAKpB,UAC1DqB,YAAW,kBAAMnB,EAAS,CAAEH,MAAM,EAAOZ,KAAM,UAAWa,QAAS,OAAO,OACnEmB,EAAIC,KAAKE,SAAUD,YAAW,kBAAM3B,EAAM6B,QAAQC,KAAd,2BAAuC3B,EAAMD,SAAS,QAElG6B,OAAM,SAAAC,GACLxB,EAAS,CAAEH,MAAM,EAAMZ,KAAM,SAAUa,QAAS0B,EAAMC,SAASP,KAAKpB,UACpEqB,YAAW,WAAQnB,EAAS,CAAEH,MAAM,EAAOZ,KAAM,UAAWa,QAAS,OAAS,UAsDlE","file":"static/js/21.4ee7b48e.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Form } from 'react-bootstrap';\r\n\r\nfunction InputFrom ({ LabelId, TypeName, LabelTitle, Name, Value, Placeholder, ClassName, handleOnchange }) {\r\n    return (\r\n        <Form.Group className = {ClassName}>\r\n            <Form.Label htmlFor = {LabelId} > {LabelTitle} </Form.Label>\r\n            <Form.Control type = {TypeName} id = {LabelId} name={Name} value={Value || ''} placeholder={Placeholder} onChange = {handleOnchange} />\r\n        </Form.Group>\r\n    )\r\n}\r\n\r\n//Select From Components\r\nfunction SelectFrom({ LabelTitle, Value, categories, handleOnchange}) {\r\n    return (\r\n        <Form.Group>\r\n            <Form.Label> {LabelTitle} </Form.Label>\r\n            <Form.Control name=\"category_id\" as=\"select\" value={Value} onChange={handleOnchange}>\r\n                    <option value = {0}> Select Category </option>\r\n                    {(categories === undefined) ? [] : categories.map((element, index) => (\r\n                        <option\r\n                            key = {index}\r\n                            id = {index}\r\n                            value = {element.id}\r\n                        >\r\n                            {element.category}\r\n                        </option>\r\n                    ))}\r\n            </Form.Control>\r\n      </Form.Group>\r\n     )\r\n }\r\n\r\n\r\nexport {\r\n    InputFrom,\r\n    SelectFrom\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Container, Row, Col, Form, Alert, Button } from \"react-bootstrap\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport { URL } from \"../../constants/config\";\r\nimport { InputFrom } from '../../components/FromComponents/InputComponent';\r\nimport PageLoader from \"../../components/pageLoader/PageLoaderComponent\";\r\nimport './assets/css/auth.css';\r\nconst VerifyCode = (props) => {\r\n  const [state, setState] = useState({ code: null });\r\n  const [alert, setAlert] = useState({ show: false, message: \"\" });\r\n\r\n  const handleOnchange = (e) => {\r\n    e.preventDefault()\r\n    setState({ ...state, [e.target.name]: e.target.value })\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    axios.post(URL._VERIFICATION_CODE, state)\r\n      .then(res => {\r\n        setAlert({ show: true, type: \"success\", message: res.data.message });\r\n        setTimeout(() => setAlert({ show: false, type: \"unknown\", message: '' }), 3000);\r\n        return res.data.success ? setTimeout(() => props.history.push(`/change-password/${state.code}`), 2000) : false;\r\n      })\r\n      .catch(error => {\r\n        setAlert({ show: true, type: 'danger', message: error.response.data.message })\r\n        setTimeout(() => { setAlert({ show: false, type: 'unknown', message: '' }) }, 3000)\r\n      });\r\n    \r\n    \r\n    \r\n  }\r\n  return (\r\n    <>\r\n      <PageLoader loading={false} />\r\n      <div className=\"allWrapper fullHeight\">\r\n        <header className=\"header authHeader clearfix\" id=\"header\">\r\n          <Container fluid={true}>\r\n            <Row>\r\n              <Col sm={6}>\r\n                <div className=\"logoWrapper mt-4 mb-4\">\r\n                  <h1 className=\"logoText\">\r\n                    <Link to=\"/\">LOGO</Link>\r\n                  </h1>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </header>\r\n        <main\r\n          className=\"loginMainArea clearfix fullHeight bgImage loginBodyBg\"\r\n          id=\"changepassBody\"\r\n        >\r\n          <Container fluid={true}>\r\n            <Row>\r\n              <Col sm={4}>\r\n                <div className=\"loginBodyContent clearfix mb-4\" id=\"loginBody\">\r\n                  <h2 className=\"headTitle mb-3\">Verify code</h2>\r\n                  <h5>\r\n                    Lorem ipsum dolor sit ament, consecrator advising elite, sed\r\n                    do elusion temporal incipient\r\n                  </h5>\r\n                </div>\r\n                <div className=\"formWrapper clearfix\" id=\"formWrapper\">\r\n                  <Form>\r\n                    <InputFrom\r\n                      LabelId=\"codeVerify\"\r\n                      TypeName=\"text\"\r\n                      LabelTitle=\"Verify Code\"\r\n                      Name=\"code\"\r\n                      Placeholder=\"Verify Code\"\r\n                      handleOnchange={handleOnchange}\r\n                    />\r\n\r\n                  \r\n                      <Alert show={alert.show} variant={alert.type} onClose={() => setAlert({ show: false })} dismissible>\r\n                        <p>{alert.message}</p>\r\n                      </Alert>\r\n                 \r\n\r\n                    <Button type=\"submit\" className=\"btn mt-2 mb-3 submitBtn\" onClick={handleSubmit}>\r\n                      Verify\r\n                    </Button>\r\n                  </Form>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </main>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default withRouter(VerifyCode);\r\n"],"sourceRoot":""}