{"version":3,"sources":["components/MegaMenuComponents/MenuOptionComponents.jsx","components/MegaMenuComponents/MegaMenuComponent.jsx","../node_modules/react-bootstrap/esm/Table.js","components/CartComponents/CartsTableComponent.jsx","pages/CartPage.jsx"],"names":["MenuOptionComponents","props","useState","menu","setMenu","useEffect","abortController","AbortController","a","axios","get","URL","_GET_STAGE_FILTER","then","res","data","categories","fetchData","abort","map","m","i","Col","sm","key","className","category","stage","item","index","Title","Url","id","MegaMenu","Table","forwardRef","_ref","ref","bsPrefix","striped","bordered","borderless","hover","size","variant","responsive","decoratedBsPrefix","classes","table","createElement","responsiveClass","CartsTableComponent","handleQuantity","e","itemQty","target","value","itemId","updateQty","qty","handleDeleteClick","onDelete","items","loading","src","cover_images","img_1","alt","name","price","Form","Control","type","placeholder","quantity","onChange","amountPrice","Button","onClick","connect","state","cart","shop","favorite","delivery","deliveryMethod","promoInfo","promo","dispatch","removeItem","removeFromCart","updateItem","updateQuantity","deleteAll","deleteAllFromCart","getDeliveryMethods","getPromoCodeInfo","code","promoCodeInfo","getCurrencyExchangeRate","base","currencyExchangeRate","setState","favoriteItem","cartItems","totalBookPrice","delivery_cost","length","status","promoPrice","discount","upto","Number","costWithDelivery","parseFloat","Header","favorite_item","cartItem","MobileHeader","Container","Row","BreadCrumb","Card","Body","find","book","event","preventDefault","Group","controlId","to","style","color","NewsLetterComponent","FooterComponent"],"mappings":"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","file":"static/js/12.4beeb140.chunk.js","sourcesContent":["import React, {useState, useEffect } from 'react'\nimport { Col } from 'react-bootstrap'\nimport { Lia } from \"../LiComponent/CommonLiComponent\";\nimport { URL } from '../../constants/config'\nimport axios from 'axios'\nconst MenuOptionComponents = props => {\n  const [menu, setMenu] = useState([]);\n    useEffect(() => {\n       const abortController = new AbortController();\n    const fetchData = async () => {\n      await axios\n        .get(URL._GET_STAGE_FILTER)\n        .then(res => setMenu(res.data.categories));\n    };\n        fetchData();\n        return () => {\n          abortController.abort();\n        };\n  }, []);\n  return (\n    <>\n          {menu ? menu.map((m, i) => {\n              return (\n                <Col sm=\"3\" key={i}>\n                  <h3 className=\"cardWidgetTitle mb-3\">{m.category}</h3>\n                  <ul className={`cardWidgetList ${i===1? \"cardWidgetList2\" : \"\"} text-center`}>\n                    {m.stage\n                      ? m.stage.map((item, index) => {\n\n                          return (\n                            <Lia\n                              key={`primary-${index}`}\n                              Title={item.stage}\n                              Url={`/shop/filter/category/${m.id}/stage/${item.id}`}\n                            />\n                          );\n                        })\n                      : \"\"}\n                  </ul>\n                </Col>\n              );}) : \"\"}\n            </>\n  );\n};\nexport default MenuOptionComponents;\n","import React from 'react';\nimport MenuOptionComponents from \"./MenuOptionComponents\";\nconst MegaMenu = () => {\n    return (\n      <>\n        <MenuOptionComponents />\n      </>\n    );\n};\n\nexport default MegaMenu;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar Table = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      striped = _ref.striped,\n      bordered = _ref.bordered,\n      borderless = _ref.borderless,\n      hover = _ref.hover,\n      size = _ref.size,\n      variant = _ref.variant,\n      responsive = _ref.responsive,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"striped\", \"bordered\", \"borderless\", \"hover\", \"size\", \"variant\", \"responsive\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  var classes = classNames(className, decoratedBsPrefix, variant && decoratedBsPrefix + \"-\" + variant, size && decoratedBsPrefix + \"-\" + size, striped && decoratedBsPrefix + \"-striped\", bordered && decoratedBsPrefix + \"-bordered\", borderless && decoratedBsPrefix + \"-borderless\", hover && decoratedBsPrefix + \"-hover\");\n  var table =\n  /*#__PURE__*/\n  React.createElement(\"table\", _extends({}, props, {\n    className: classes,\n    ref: ref\n  }));\n\n  if (responsive) {\n    var responsiveClass = decoratedBsPrefix + \"-responsive\";\n\n    if (typeof responsive === 'string') {\n      responsiveClass = responsiveClass + \"-\" + responsive;\n    }\n\n    return (\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        className: responsiveClass\n      }, table)\n    );\n  }\n\n  return table;\n});\nexport default Table;","import  React from 'react';\nimport {Form, Button, Table } from \"react-bootstrap\";\nimport '../../pages/checkout.css';\nimport { URL } from '../../constants/config';\n\nconst CartsTableComponent = (props) => {\n\n    const handleQuantity = (e) => {\n        const itemQty = (e.target.value <= 0 ) ? 1 : e.target.value;\n        const itemId  = e.target.id;\n\n        return props.updateQty({\n                        id: itemId,\n                        qty: itemQty\n                    });\n    }\n\n    const handleDeleteClick = (e) => {\n        return props.onDelete(e.target.id)\n    }\n\n\n    return (\n        <Table responsive className=\"cardTable\">\n        <thead>\n          <tr>\n            <th>Goods</th>\n            <th>Price</th>\n            <th>Amount</th>\n            <th>Total</th>\n            <th></th>\n          </tr>\n        </thead>\n\n\n        <tbody>\n          {props.items.map((item, index) => (<tr key={index}>\n            <td>\n              <div className=\"cartProductDetails d-flex flex-fill align-items-center\">\n                <div className=\"cartProductMedia bgGray \">\n                  <img loading=\"lazy\" src={item.cover_images.img_1} alt=\"book-cover\" />\n                </div>\n                <div className=\"cartProductTitle\">\n                  <h3>\n                    {item.name}\n                  </h3>\n                </div>\n              </div>\n            </td>\n\n            <td className=\"aligneMiddle\" id={`price-${item.id}`}>Ksh {item.price}</td>\n\n            <td className=\"cartQntN aligneMiddle\">\n              <Form.Control type=\"number\" placeholder=\"1\" id={item.id} value={item.quantity} onChange={handleQuantity} />\n            </td>\n\n            <td className=\"aligneMiddle\" id={`tp-${item.id}`}>Ksh {item.amountPrice}</td>\n\n            <td className=\"aligneMiddle\">\n\n              <Button className=\"btn-dark\" id={item.id} onClick={handleDeleteClick} >\n                Delete <i className=\"fas fa-times\"></i>\n              </Button>\n\n            </td>\n\n          </tr>\n          ))}\n\n        </tbody>\n      </Table>\n    );\n}\n\nexport default CartsTableComponent;\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport {\n  Container,\n  Row,\n  Col,\n  Card,\n  Form,\n  Button,\n  Table,\n} from 'react-bootstrap';\n\nimport FooterComponent from '../components/FooterComponent/FooterComponent';\nimport HeaderComponent from '../components/header/Header';\nimport MobileHeader from '../components/header/MobileHeader';\nimport { NewsLetterComponent } from '../components/offerPageComponents/NewsLetterComponent';\nimport BreadCrumb from '../components/BreadCrumb/BreadCrumb';\nimport CartTable from '../components/CartComponents/CartsTableComponent';\nimport PageLoader from '../components/pageLoader/PageLoaderComponent';\nimport MegaMenu from '../components/MegaMenuComponents/MegaMenuComponent';\n\nimport '../pages/checkout.css';\n\nimport {\n  removeFromCart,\n  deleteAllFromCart,\n  updateQuantity,\n  deliveryMethod,\n  promoCodeInfo,\n  currencyExchangeRate,\n} from '../redux/actions/shopActions';\n\nconst CartPage = (props) => {\n  const [state, setState] = useState({\n    promo: '',\n  });\n\n  const favoriteItem = props.favorite.items;\n  const cartItems = props.cart;\n\n  let totalBookPrice = 0;\n  let delivery_cost = props.delivery ? props.delivery[0].price : 0;\n\n  if (cartItems.length !== 0) {\n    cartItems.map((item) => (totalBookPrice += item.amountPrice));\n  }\n\n  const promoInfo = props.promoInfo ? props.promoInfo : { status: false };\n  let promoPrice = totalBookPrice;\n\n  if (promoInfo.status) {\n    const { discount, upto } = promoInfo;\n\n    if (Number(totalBookPrice) <= Number(upto)) {\n      promoPrice = totalBookPrice - totalBookPrice * (discount / 100);\n    } else if (Number(totalBookPrice) > Number(upto)) {\n      promoPrice = totalBookPrice - upto;\n    }\n  }\n\n  let costWithDelivery = parseFloat(promoPrice) + parseFloat(delivery_cost);\n\n  useEffect(() => {\n    return props.getDeliveryMethods();\n  }, []);\n\n  const handleDeleteClick = (id) => {\n    return cartItems.find((book) => {\n      if (Number(book.id) === Number(id)) {\n        props.removeItem(book.id);\n      }\n    });\n  };\n\n  const handleDeleteAll = (event) => {\n    event.preventDefault();\n    props.deleteAll();\n  };\n\n  const handleQuantity = ({ id, qty }) => {\n    props.updateItem({ id, qty });\n  };\n\n  const handlePromoOnChange = (e) => {\n    setState({\n      ...state,\n      promo: e.target.value,\n    });\n  };\n\n  const handleApplyPromoOnClick = (e) => {\n    e.preventDefault();\n    props.getPromoCodeInfo(state.promo);\n  };\n\n  const handleCheckoutOnClick = (e) => {\n    props.getCurrencyExchangeRate('USD');\n  };\n\n  return (\n    <>\n      <PageLoader loading={false} />\n      <div className='allWrapper'>\n        <HeaderComponent\n          favorite_item={favoriteItem.length}\n          cartItem={cartItems.length}\n        />\n        <MobileHeader\n          favorite_item={favoriteItem.length}\n          cartItem={cartItems.length}\n        />\n        <main className='mainContent clearfix' id='mainContent'>\n          <section\n            className='sectionBreadcrumb secGap clearfix pb-0'\n            id='sectionBreadcrumb'\n          >\n            <Container>\n              <Row>\n                <Col>\n                  <BreadCrumb />\n                </Col>\n              </Row>\n            </Container>\n          </section>\n\n          <section className='chooseCategory clearfix' id='chooseCategory'>\n            <Container>\n              {cartItems.length === 0 ? (\n                <>\n                  <Row>\n                    <Col>\n                      <div className='contentArea text-center mt-5 mb-5'>\n                        <h2 className='sectionTitle mb-3'>\n                          Your cart is <span> empty </span>\n                        </h2>\n                        <p>\n                          It’s not a problem. Just choose a category you’re\n                          interested in and add goods to favorites list\n                        </p>\n                      </div>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col>\n                      <Card className='border-0'>\n                        <Card.Body className='p-0'>\n                          <div className='cardContentDetails pt-5 pb-5 mb-5 bgGray clearfix'>\n                            <Row>\n                              <MegaMenu />\n                            </Row>\n                          </div>\n                        </Card.Body>\n                      </Card>\n                    </Col>\n                  </Row>\n                </>\n              ) : (\n                <section className='cartSection clearfix' id='cartSection'>\n                  <Container>\n                    <Row>\n                      <Col>\n                        <Card className='table-responsive border-0 cartTableBody'>\n                          <Card.Body className='p-0'>\n                            <CartTable\n                              items={cartItems}\n                              updateQty={handleQuantity}\n                              onDelete={handleDeleteClick}\n                            />\n                          </Card.Body>\n                        </Card>\n                      </Col>\n                    </Row>\n                    <Row>\n                      <Col>\n                        <Button\n                          variant='danger'\n                          className='btnGraySm btnDeleteall'\n                          onClick={handleDeleteAll}\n                        >\n                          Delete all <i className='fas fa-times'></i>\n                        </Button>\n                      </Col>\n\n                      <Col>\n                        <Form className='form-inline cartPromo justify-content-end'>\n                          <Form.Group controlId='formBasicPassword'>\n                            <Form.Control\n                              type='text'\n                              name='promo-code'\n                              placeholder='Promo Code'\n                              value={promoInfo.code}\n                              onChange={handlePromoOnChange}\n                            />\n                          </Form.Group>\n                          <Button\n                            type='submit'\n                            className='ml-2'\n                            onClick={handleApplyPromoOnClick}\n                          >\n                            Apply\n                          </Button>\n                        </Form>\n                      </Col>\n                    </Row>\n                    <Row className='justify-content-end text-right mt-4 mb-5'>\n                      <Col sm='4'>\n                        <div className='cartProductPrice'>\n                          <Table>\n                            <tbody>\n                              <tr>\n                                <td className='priceCartPage'>Price</td>\n                                <td className='priceCartPage'>\n                                  .........................................\n                                </td>\n                                <td className='text-right priceCartPage'>\n                                  <span className='priceCartPage'>\n                                    Ksh {totalBookPrice}\n                                  </span>\n                                </td>\n                              </tr>\n                              {!promoInfo.status ? (\n                                <></>\n                              ) : (\n                                <tr>\n                                  <td className='priceCartPage'>\n                                    Price after Discount\n                                  </td>\n                                  <td className='priceCartPage'>\n                                    .........................................\n                                  </td>\n                                  <td className='text-right priceCartPage'>\n                                    <span className='priceCartPage'>\n                                      Ksh {promoPrice}\n                                    </span>\n                                  </td>\n                                </tr>\n                              )}\n                              <tr>\n                                <td className='priceCartPage'>Delivery</td>\n                                <td className='priceCartPage'>\n                                  .........................................\n                                </td>\n                                <td className='text-right priceCartPage'>\n                                  <span className='priceCartPage'>\n                                    Ksh {delivery_cost}\n                                  </span>\n                                </td>\n                              </tr>\n                              <tr>\n                                <td className='priceCartPage'>Total</td>\n                                <td className='priceCartPage'>\n                                  .........................................\n                                </td>\n                                <td className='text-right priceCartPage'>\n                                  {' '}\n                                  <span\n                                    className='priceCartPage'\n                                    id='grand-total'\n                                  >\n                                    Ksh {costWithDelivery}\n                                  </span>\n                                </td>\n                              </tr>\n                            </tbody>\n                          </Table>\n                          <Link\n                            to='/checkout'\n                            className='btn btn-primary'\n                            style={{ color: 'white' }}\n                            onClick={handleCheckoutOnClick}\n                          >\n                            Checkout\n                          </Link>\n                        </div>\n                      </Col>\n                    </Row>\n                  </Container>\n                </section>\n              )}\n            </Container>\n          </section>\n          <section\n            className='mailSubscribe clearfix sectionBgImage sectionBgImg01 secGap'\n            id='mailSubscribe'\n          >\n            <Container className='container'>\n              <NewsLetterComponent />\n            </Container>\n          </section>\n          {/* end of mailSubscribe */}\n        </main>\n        {/* end of allWrapper */}\n\n        <FooterComponent />\n      </div>\n      {/* end of allWrapper */}\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  cart: state.shop.cart,\n  favorite: state.favorite,\n  delivery: state.shop.deliveryMethod,\n  promoInfo: state.shop.promo,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    removeItem: (id) => dispatch(removeFromCart(id)),\n    updateItem: ({ id, qty }) => dispatch(updateQuantity({ id, qty })),\n    deleteAll: () => dispatch(deleteAllFromCart()),\n    getDeliveryMethods: () => dispatch(deliveryMethod()),\n    getPromoCodeInfo: (code) => dispatch(promoCodeInfo(code)),\n    getCurrencyExchangeRate: (base) => dispatch(currencyExchangeRate(base)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CartPage);\n"],"sourceRoot":""}