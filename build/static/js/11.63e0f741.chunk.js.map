{"version":3,"sources":["components/MegaMenuComponents/MenuOptionComponents.jsx","components/MegaMenuComponents/MegaMenuComponent.jsx","components/offerPageComponents/NewBookComponent.jsx","pages/FavoritesPage.jsx"],"names":["MenuOptionComponents","props","useState","menu","setMenu","useEffect","abortController","AbortController","a","axios","get","URL","_GET_STAGE_FILTER","then","res","data","categories","fetchData","abort","map","m","i","Col","sm","key","className","category","stage","item","index","Title","Url","id","MegaMenu","connect","state","favorite","bookId","BookImage","ProductTitle","AuthorName","ProductPrice","ImageBg","isFev","removeFavItem","stateFav","once","height","src","alt","style","width","to","onClick","bind","cart","shop","dispatch","showAllFavItem","showFavItems","totalCartItems","length","totalFavoriteItems","items","favoriteItems","removeFavoriteItem","loading","pending","favorite_item","cartItem","xs","Body","cover_images","img_1","name","book_author","price"],"mappings":"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","file":"static/js/11.63e0f741.chunk.js","sourcesContent":["import React, {useState, useEffect } from 'react'\r\nimport { Col } from 'react-bootstrap'\r\nimport { Lia } from \"../LiComponent/CommonLiComponent\";\r\nimport { URL } from '../../constants/config'\r\nimport axios from 'axios'\r\nconst MenuOptionComponents = props => {\r\n  const [menu, setMenu] = useState([]);\r\n    useEffect(() => {\r\n       const abortController = new AbortController();\r\n    const fetchData = async () => {\r\n      await axios\r\n        .get(URL._GET_STAGE_FILTER)\r\n        .then(res => setMenu(res.data.categories));\r\n    };\r\n        fetchData();\r\n        return () => {\r\n          abortController.abort();\r\n        };\r\n  }, []);\r\n  return (\r\n    <>\r\n          {menu ? menu.map((m, i) => {\r\n              return (\r\n                <Col sm=\"3\" key={i}>\r\n                  <h3 className=\"cardWidgetTitle mb-3\">{m.category}</h3>\r\n                  <ul className={`cardWidgetList ${i===1? \"cardWidgetList2\" : \"\"} text-center`}>\r\n                    {m.stage\r\n                      ? m.stage.map((item, index) => {\r\n\r\n                          return (\r\n                            <Lia\r\n                              key={`primary-${index}`}\r\n                              Title={item.stage}\r\n                              Url={`/shop/filter/category/${m.id}/stage/${item.id}`}\r\n                            />\r\n                          );\r\n                        })\r\n                      : \"\"}\r\n                  </ul>\r\n                </Col>\r\n              );}) : \"\"}\r\n            </>\r\n  );\r\n};\r\nexport default MenuOptionComponents;\r\n","import React from 'react';\r\nimport MenuOptionComponents from \"./MenuOptionComponents\";\r\nconst MegaMenu = () => {\r\n    return (\r\n      <>\r\n        <MenuOptionComponents />\r\n      </>\r\n    );\r\n};\r\n\r\nexport default MegaMenu;\r\n","import React from 'react';\r\nimport{Link} from 'react-router-dom'\r\nimport {Col, Card, Image} from 'react-bootstrap';\r\nimport LazyLoad from 'react-lazyload';\r\nimport '../../assets/css/theme.css'\r\nimport { connect } from 'react-redux';\r\nconst NewBookComponent = ({bookId, BookImage, ProductTitle, AuthorName, ProductPrice, ImageBg ,isFev = false , removeFavItem , stateFav, favorite }) => {\r\n\r\n\r\n  const imgStyle = {\r\n        width:\"163px\",\r\n    }\r\n  const handleRemove = (bookId) => {\r\n    removeFavItem(bookId)\r\n  }\r\n\r\n\r\n    return(\r\n        <Col className=\"col-auto\">\r\n            <LazyLoad once={true} height={200}>\r\n                <Card className=\"productCard border-0 bg-transparent\">\r\n                    <div className={`productMedia mb-3 ${ImageBg}`}>\r\n                        <Image src={BookImage} alt=\"Book Image\" style={imgStyle} />\r\n                    </div>\r\n                    <div className=\"productContent\">\r\n                        <Link to={`/product/${bookId}`}><h4 className=\"productTitle limit-character mb-1\" >{ProductTitle} {(isFev === true) ?<span className=\"favoritIcon\"><i className=\"fas fa-star\"></i></span> :''}</h4></Link>\r\n                        <h5 className=\"authorName mb-1\">{AuthorName}</h5>\r\n                        <p className=\"productPrice\">Ksh {ProductPrice}</p>\r\n                        <button  className=\"btn btn-danger\" onClick = { handleRemove.bind(this, bookId) }>Remove</button>\r\n                    </div>\r\n                </Card>\r\n            </LazyLoad>\r\n        </Col>)\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        favorite: state.favorite\r\n    }\r\n}\r\n\r\n// const mapDispatchToProps = (dispatch) => {\r\n//     return{\r\n//         removeFavorite : (id)=>dispatch(removeFavItem(id))\r\n//     }\r\n// }\r\nexport default connect(mapStateToProps, null)(NewBookComponent);\r\n","import React, {useEffect } from \"react\";\r\nimport { Container, Row, Col, Card} from \"react-bootstrap\";\r\nimport { connect } from 'react-redux'\r\nimport NewBookComponent from \"../components/offerPageComponents/NewBookComponent\";\r\nimport { NewsLetterComponent } from \"../components/offerPageComponents/NewsLetterComponent\";\r\nimport FooterComponent from \"../components/FooterComponent/FooterComponent\";\r\nimport  HeaderComponent from \"../components/header/Header\";\r\nimport  MobileHeader from \"../components/header/MobileHeader\";\r\nimport BreadCrumb from \"../components/BreadCrumb/BreadCrumb\";\r\nimport { showFavItems, removeFavItem } from '../redux/actions/favoriteActions';\r\nimport './assets/favorite.css'\r\nimport PageLoader from \"../components/pageLoader/PageLoaderComponent\";\r\nimport MegaMenu from \"../components/MegaMenuComponents/MegaMenuComponent\";\r\n\r\nconst FavoritesPage = (props) => {\r\n    const totalCartItems = props.cart.length;\r\n    const totalFavoriteItems = props.favorite.items.length;\r\n    const favoriteItems = (totalFavoriteItems !== 0 )? props.favorite.items : [];\r\n\r\n    useEffect(() => {\r\n        const abortController = new AbortController();\r\n        props.showAllFavItem()\r\n          return () => {\r\n            abortController.abort();\r\n          };\r\n    },[]);\r\n\r\n    const removeFavoriteItem = (id) => props.removeFavItem(id);\r\n\r\n    return (\r\n        <>\r\n            <PageLoader loading={ props.favorite.pending}/>\r\n            <div className=\"allWrapper\">\r\n                <HeaderComponent\r\n                    favorite_item={totalFavoriteItems}\r\n                    cartItem={totalCartItems}\r\n                />\r\n                <MobileHeader\r\n                    favorite_item={totalFavoriteItems}\r\n                    cartItem={totalCartItems}\r\n                />\r\n                <main className=\"mainContent clearfix\" id=\"mainContent\">\r\n                    <section\r\n                        className=\"sectionBreadcrumb secGap clearfix pb-0\"\r\n                        id=\"sectionBreadcrumb\"\r\n                    >\r\n\r\n                        <Container>\r\n                            <Row>\r\n                                <Col>\r\n                                    <BreadCrumb />\r\n                                </Col>\r\n                            </Row>\r\n                        </Container>\r\n                    </section>\r\n                    { totalFavoriteItems === 0 ?\r\n                        <section className=\"chooseCategory clearfix\" id=\"chooseCategory\">\r\n                            <Container>\r\n                                <Row>\r\n                                    <Col xs={12}>\r\n                                        <div className=\"contentArea text-center mt-5 mb-5\">\r\n                                            <h2 className=\"sectionTitle mb-3\">\r\n                                                You don’t have any <span> Favorites</span>\r\n                                            </h2>\r\n\r\n                                            <p>\r\n                                                It’s not a problem. Just choose a category you’re\r\n                                                interested in and add goods to favorites list\r\n                                            </p>\r\n\r\n                                        </div>\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                                <Row>\r\n                                    <Col>\r\n                                        <Card className=\"border-0\">\r\n                                            <Card.Body className=\"p-0\">\r\n                                                <div className=\"cardContentDetails pt-5 pb-5 mb-5 bgGray clearfix\">\r\n                                                    <Row>\r\n                                                        <MegaMenu/>\r\n                                                    </Row>\r\n                                                </div>\r\n                                            </Card.Body>\r\n                                        </Card>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Container>\r\n                        </section>\r\n                        :\r\n\r\n                        <> <section\r\n                            className=\"favoritesItems secGap productView clearfix\"\r\n                            id=\"favoritesItems\"\r\n                        >\r\n                            <Container>\r\n                                <Row className=\"mt-5 mb-5 \">\r\n                                    { favoriteItems.map((item, index) => {\r\n                                        return(\r\n                                            <NewBookComponent\r\n                                                key={index}\r\n                                                bookId={item.id}\r\n                                                ImageBg=\"bgGray\"\r\n                                                BookImage={`${item.cover_images.img_1}`}\r\n                                                ProductTitle={ item.name }\r\n                                                AuthorName={ item.book_author.name }\r\n                                                ProductPrice={item.price}\r\n                                                isFev = { true }\r\n                                                removeFavItem = { removeFavoriteItem }\r\n                                            />\r\n                                        )} )}\r\n                                </Row>\r\n                            </Container>\r\n                        </section>\r\n\r\n\r\n                            <section\r\n                                className=\"mailSubscribe clearfix sectionBgImage sectionBgImg01 secGap\"\r\n                                id=\"mailSubscribe\"\r\n                            >\r\n                                <Container className=\"container\">\r\n                                    <NewsLetterComponent />\r\n                                </Container>\r\n                            </section>\r\n                        </>\r\n                    }\r\n                </main>\r\n\r\n                <FooterComponent />\r\n            </div>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        cart: state.shop.cart,\r\n        favorite: state.favorite\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps =(dispatch) => {\r\n    return {\r\n        showAllFavItem: () => dispatch(showFavItems()),\r\n        removeFavItem: (id) => dispatch(removeFavItem(id))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FavoritesPage);\r\n"],"sourceRoot":""}