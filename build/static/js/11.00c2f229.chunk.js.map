{"version":3,"sources":["components/FromComponents/InputComponent.jsx","constants/firebase-config.js","constants/authMethods.js","services/socialAuth.js","components/oAuth/OAuth.jsx","components/authComponents/SocialListComponent.jsx","pages/auth/SignUp.jsx"],"names":["InputFrom","LabelId","TypeName","LabelTitle","Name","Value","Placeholder","ClassName","handleOnchange","Group","className","Label","htmlFor","Control","type","id","name","value","placeholder","onChange","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","googleProvider","auth","GoogleAuthProvider","firebaseAuth","provider","Promise","resolve","reject","signInWithPopup","then","res","user","catch","error","socialAuth","a","providerData","providerId","uid","displayName","email","phone","phoneNumber","photo","photoURL","console","log","connect","state","dispatch","login","data","OauthLogin","signup","Oauth","OauthSignUp","emptyStatus","showAllFavItem","showFavItems","props","handleOnClick","userInfo","onClick","alert","SocialListComponent","withRouter","categories","site","sign_up_error","useState","category_id","first_name","last_name","password","repeatPassword","setData","show","message","setAlert","status","success","history","goBack","useEffect","e","preventDefault","target","loading","fluid","sm","to","alt","src","Logo","style","width","action","onSubmit","axios","post","URL","_REGISTER","setTimeout","push","response","variant","onClose","dismissible"],"mappings":"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","file":"static/js/11.00c2f229.chunk.js","sourcesContent":["import React from 'react';\nimport { Form } from 'react-bootstrap';\n\nfunction InputFrom ({ LabelId, TypeName, LabelTitle, Name, Value, Placeholder, ClassName, handleOnchange }) {\n    return (\n        <Form.Group className = {ClassName}>\n            <Form.Label htmlFor = {LabelId} > {LabelTitle} </Form.Label>\n            <Form.Control type = {TypeName} id = {LabelId} name={Name} value={Value || ''} placeholder={Placeholder} onChange = {handleOnchange} />\n        </Form.Group>\n    )\n}\n\n//Select From Components\nfunction SelectFrom({ LabelTitle, Value, categories, handleOnchange}) {\n    return (\n        <Form.Group>\n            <Form.Label> {LabelTitle} </Form.Label>\n            <Form.Control name=\"category_id\" as=\"select\" value={Value} onChange={handleOnchange}>\n                    <option value = {0}> Select Category </option>\n                    {(categories === undefined) ? [] : categories.map((element, index) => (\n                        <option\n                            key = {index}\n                            id = {index}\n                            value = {element.id}\n                        >\n                            {element.category}\n                        </option>\n                    ))}\n            </Form.Control>\n      </Form.Group>\n     )\n }\n\n\nexport {\n    InputFrom,\n    SelectFrom\n}\n","// Import the functions you need from the SDKs you need\n\n\n\nimport firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\n\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDzvHSi0kpxiFxCXmEbnWuaape_jWAhuDU\",\n  authDomain: \"abookstore-d5215.firebaseapp.com\",\n  projectId: \"abookstore-d5215\",\n  storageBucket: \"abookstore-d5215.appspot.com\",\n  messagingSenderId: \"591873202424\",\n  appId: \"1:591873202424:web:c5faa8ddde0f95ca62830d\",\n  measurementId: \"G-SPE09YV8D4\"\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase;","import firebase from './firebase-config';\n\n//export const facebookProvider = new firebase.auth.FacebookAuthProvider();\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();","import firebase from \"../constants/firebase-config\";\n\nconst firebaseAuth = (provider) => {\n    return new Promise((resolve, reject) => {\n        firebase\n            .auth()\n            .signInWithPopup(provider)\n            .then((res) => {\n                return resolve(res.user);\n            }).catch( (error) => {\n                return reject(error);\n            });\n    });\n}\n\n\nconst socialAuth = async (provider) => {\n    try {\n        const { providerData } = await firebaseAuth(provider);\n        \n        return {\n            provider: providerData[0].providerId,\n            id: providerData[0].uid,\n            name: providerData[0].displayName,\n            email: providerData[0].email,\n            phone: providerData[0].phoneNumber,\n            photo: providerData[0].photoURL \n        }\n        \n    } catch (error) {\n        console.log(error);\n        return null;\n    }\n\n}\n\nexport default socialAuth;","import React from 'react';\nimport { connect } from 'react-redux';\n//import { FacebookSignIn, GoogleSignIn } from \"google-facebook-signin-react\";\nimport { FacebookLoginButton, GoogleLoginButton } from 'react-social-login-buttons';\nimport { OauthLogin, emptyStatus, OauthSignUp } from '../../redux/actions/authActions';\nimport { showFavItems } from '../../redux/actions/favoriteActions';\n\nimport { googleProvider } from '../../constants/authMethods';\nimport socialAuth from '../../services/socialAuth';\n\n\n\nconst OAuth = (props) => {\n\n    const success = (res) => {\n        return new Promise((resolve, reject) => {\n            const path = window.location.pathname;\n            if (path ==='/login') {\n                if (res.provider === \"google\") {\n                    const loginData = res.data.Qt || res.data.Rt \n                    props.login(loginData)\n                }\n                if (res.provider === 'facebook') {\n                    props.login(res.data)\n                }\n                resolve();\n            }\n\n            if (path === '/signup') {\n                if (res.provider === \"google\") {\n                    const OauthData = res.data.Qt ? res.data.Qt : res.data.Rt;\n                    props.signup(OauthData)\n                }\n                if (res.provider === 'facebook') {\n                    props.signup(res.data)\n                }\n                resolve();\n            }\n        });\n    }\n\n    const error =(err) =>{\n        console.log(err);\n    }\n\n    const handleOnClick = async (provider) => {\n        const userInfo =  await socialAuth(provider);\n                \n        if(userInfo){\n            props.login(userInfo);\n        }\n    }\n\n    return (\n        <div>            \n            <FacebookLoginButton onClick={()=> alert('Facebook Button')} />\n            <GoogleLoginButton onClick={() => handleOnClick(googleProvider)} />\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    auth: state.auth,\n})\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        login: (data) => dispatch(OauthLogin(data)),\n        signup: (Oauth) => dispatch(OauthSignUp(Oauth)),\n        emptyStatus: () => dispatch(emptyStatus()),\n        showAllFavItem: () => dispatch(showFavItems()),\n   }\n}\nexport default connect(mapStateToProps,mapDispatchToProps)(OAuth);\n","import React from \"react\";\nimport OAuth from '../oAuth/OAuth'\nexport default function SocialListComponent() {\n  return (\n    <div className=\"loginBodyContent clearfix\" id=\"loginBody\">\n      <h2 className=\"headTitle\">Login to Your Account</h2>\n      <div className=\"socialLogin mb-4\">\n        <ul className=\"socialList mt-4 mb-4\" >\n          <OAuth />\n        </ul>\n        <h4>OR</h4>\n      </div>\n    </div>\n  );\n}","import React, {useState,useEffect}from 'react';\nimport axios from 'axios';\nimport {connect} from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport {Container, Row, Col, Form, Button, Alert} from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport SocialListComponent from '../../components/authComponents/SocialListComponent';\nimport { InputFrom } from '../../components/FromComponents/InputComponent';\nimport { URL } from '../../constants/config'\nimport './assets/css/auth.css';\nimport PageLoader from \"../../components/pageLoader/PageLoaderComponent\";\nimport Logo from '../../assets/images/logo.png'\n\n\n\nconst SignUp = (props) => {\n\n  const [data, setData] = useState({ category_id: null, first_name: null, last_name: null, email: null, password: null, repeatPassword: null })\n  const [alert, setAlert] = useState({ show: false, type: 'danger', message: '' });\n  //const categories = (props.categories) ? props.categories : [];\n  const { auth , error } = props\n  const status = auth.status\n  if (status.success === true) {\n     props.history.goBack()\n  }\n\n\n  useEffect(() => {\n    if (error) {\n      setAlert({ show: true, type:'danger', message: error.message })\n    }\n    if(!error) {\n      setAlert({ show: false, type: 'unknown', message:''})\n    }\n  },[error])\n\n  const handleOnchange = (e) => {\n    e.preventDefault()\n    return setData({ ...data, [e.target.name]: e.target.value })\n  }\n\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n  /*   if (!data.category_id) {\n      return setAlert({ show: true, type: 'danger', message: \"Select A category\" })\n    }\n    else */ \n    if (!data.first_name || data.first_name === '') {\n      return setAlert({ show: true, type: 'danger',  message: \"First Name Required\" })\n    }\n    else if (!data.last_name === null || undefined || '') {\n      return setAlert({ show: true, type: 'danger', message: \"Last name Required\" })\n    }\n    else if (!data.email || data.email === '') {\n      return setAlert({ show: true, type: 'danger', message: \"Email Required\" })\n    }\n    else if (!data.password || data.password === '') {\n      return setAlert({ show: true, type: 'danger', message: \"Password Required\" })\n    }\n    else if (data.repeatPassword === '') {\n      return setAlert({ show: true, type: 'danger', message: \"Repeat Password Required\"})\n    }\n    else if (data.password !== data.repeatPassword) {\n      return setAlert({ show: true, type: 'danger', message: \"Password not match\" })\n    }\n    else if (!data.first_name || !data.last_name || !data.email || !data.password || !data.repeatPassword) {\n      return setAlert({ show: true, type: 'danger', message: \"Fields can not be empty\"})\n    }\n    else {\n      delete data.repeatPassword;\n      axios.post(URL._REGISTER, data)\n        .then(res => {\n          setAlert({ show: res.data.status, type: 'success', message: res.data.message })\n          if (res.data.message) {\n            setTimeout(() => {\n              props.history.push(\"/login\")\n              setAlert({ show: false })\n            }, 3000);\n          }\n        })\n        .catch(error => {\n          setAlert({ show: error.response.data.status, type: 'danger', message: error.response.data.message })\n        })\n    }\n  }\n\n    return (<>\n        <PageLoader loading={false}/>\n      <div className=\"allWrapper fullHeight\">\n        <main className=\"loginMainArea clearfix fullHeight bgImage signUpBodyBg pb-3\" id=\"signUpBody\">\n          <Container fluid={true}>\n            <Row>\n              <Col sm={6}>\n                <div className=\"logoWrapper mt-4 mb-4\">\n                  <h1 className=\"logoText\"><Link to=\"/\"><img loading=\"lazy\" alt={'Logo'} src={Logo} style={{width:\"100px\"}} /></Link></h1>\n                </div>\n              </Col>\n            </Row>\n          <Row>\n              <Col sm={6}>\n                <SocialListComponent />\n                <div className=\"formWrapper clearfix\" id=\"formWrapper\">\n                  <Form action='post' onSubmit={handleSubmit}>\n\n                    {/* <SelectFrom LabelTitle=\"Category\"\n                      Name=\"category_id\"\n                      categories={categories}\n                      Value={data.category_id}\n                      handleOnchange={handleOnchange}\n                    /> */}\n\n                    <InputFrom\n                      LabelId=\"firstName\"\n                      TypeName=\"text\"\n                      LabelTitle=\"First Name\"\n                      Name=\"first_name\"\n                      Placeholder=\"Enter Your First Name\"\n                      Value={data.first_name}\n                      handleOnchange={handleOnchange}\n                    />\n\n                    <InputFrom\n                      LabelId=\"lastName\"\n                      TypeName=\"text\"\n                      LabelTitle=\"Last Name\"\n                      Name=\"last_name\"\n                      Placeholder=\"Enter Your Last Name\"\n                      Value={data.last_name}\n                      handleOnchange={handleOnchange}\n                    />\n                    <InputFrom\n                      LabelId=\"email\"\n                      TypeName=\"email\"\n                      LabelTitle=\"Email\"\n                      Name=\"email\"\n                      Placeholder=\"Enter Your Email\"\n                      Value={data.email}\n                      handleOnchange={handleOnchange}\n                    />\n\n                    <InputFrom\n                      LabelId=\"password\"\n                      TypeName=\"password\"\n                      LabelTitle=\"Password\"\n                      Name=\"password\"\n                      Placeholder=\"Enter Your Password\"\n                      Value={data.password}\n                      handleOnchange={handleOnchange}\n                    />\n                    <InputFrom\n                      LabelId=\"repeatPassword\"\n                      TypeName=\"password\"\n                      LabelTitle=\"Repeat Password\"\n                      Name=\"repeatPassword\"\n                      Placeholder=\"Enter Your Repeat Password\"\n                      Value={data.repeatPassword}\n                      handleOnchange={handleOnchange}\n                    />\n                    <Link className=\"linkText mb-3\" to=\"/forgot-password\">Forgot password?</Link>\n                      <Alert show={alert.show} variant={alert.type} onClose={() => setAlert({...alert, show:false})} dismissible>\n                          <p>{alert.message}</p>\n                      </Alert>\n                    <Button type=\"submit\" className=\"btn submitBtn mb-3 \" > Sign Up</Button>\n                    <p>I already have an account! &nbsp; <Link className=\"linkText mb-3\" to=\"/login\">Sign In</Link></p>\n                  </Form>\n                </div>\n              </Col>\n            </Row>\n          </Container>\n        </main>\n      </div>\n    </>);\n}\n\nconst mapStateToProps = (state) => ({\n    auth: state.auth,\n    categories: state.site.categories,\n    error: state.auth.sign_up_error\n})\n\n\n\nexport default withRouter(connect(mapStateToProps, null)(SignUp));\n"],"sourceRoot":""}