{"version":3,"sources":["components/FromComponents/InputComponent.jsx","pages/auth/ForgotPassword.jsx"],"names":["InputFrom","LabelId","TypeName","LabelTitle","Name","Value","Placeholder","ClassName","handleOnchange","Group","className","Label","htmlFor","Control","type","id","name","value","placeholder","onChange","withRouter","props","useState","email","state","setState","show","message","alert","setAlert","loading","fluid","sm","to","src","Logo","style","width","e","preventDefault","target","variant","onClose","dismissible","onClick","axios","post","URL","_RESET_PASSWORD","then","res","data","setTimeout","success","history","push","catch","error","response"],"mappings":"yHAAA,+DAGA,SAASA,EAAT,GAA6G,IAAvFC,EAAsF,EAAtFA,QAASC,EAA6E,EAA7EA,SAAUC,EAAmE,EAAnEA,WAAYC,EAAuD,EAAvDA,KAAMC,EAAiD,EAAjDA,MAAOC,EAA0C,EAA1CA,YAAaC,EAA6B,EAA7BA,UAAWC,EAAkB,EAAlBA,eACtF,OACI,kBAAC,IAAKC,MAAN,CAAYC,UAAaH,GACrB,kBAAC,IAAKI,MAAN,CAAYC,QAAWX,GAAvB,IAAmCE,EAAnC,KACA,kBAAC,IAAKU,QAAN,CAAcC,KAAQZ,EAAUa,GAAMd,EAASe,KAAMZ,EAAMa,MAAOZ,GAAS,GAAIa,YAAaZ,EAAaa,SAAYX,O,qcC8FlHY,uBA1FQ,SAACC,GAAW,IAAD,EACNC,mBAAS,CAAEC,MAAO,KADZ,mBACzBC,EADyB,KAClBC,EADkB,OAENH,mBAAS,CAAEI,MAAM,EAAOZ,KAAM,UAAWa,QAAS,KAF5C,mBAEzBC,EAFyB,KAElBC,EAFkB,KAuBhC,OACE,oCACE,kBAAC,IAAD,CAAYC,SAAS,IACrB,yBAAKpB,UAAU,yBACb,4BAAQA,UAAU,6BAA6BK,GAAG,UAChD,kBAAC,IAAD,CAAWgB,OAAO,GAChB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,GAAI,GACP,yBAAKtB,UAAU,yBACb,wBAAIA,UAAU,YACZ,kBAAC,OAAD,CAAMuB,GAAG,KAAI,yBAAKH,QAAQ,OAAOI,IAAKC,IAAMC,MAAO,CAACC,MAAM,kBAQtE,0BACE3B,UAAU,6DACVK,GAAG,aAEH,kBAAC,IAAD,CAAWgB,OAAO,GAChB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,GAAI,GACP,yBAAKtB,UAAU,iCAAiCK,GAAG,aACjD,wBAAIL,UAAU,kBAAd,oBACA,2HAMF,yBAAKA,UAAU,uBAAuBK,GAAG,eACvC,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEd,QAAQ,QACRC,SAAS,QACTC,WAAW,QACXC,KAAK,QACLC,MAAOmB,EAAMD,MACbjB,YAAY,mBACZE,eA7DG,SAAC8B,GACtBA,EAAEC,iBACFd,E,yVAAS,CAAD,GAAKD,EAAL,eAAYc,EAAEE,OAAOxB,KAAOsB,EAAEE,OAAOvB,YA8D3B,kBAAC,IAAD,CAAOS,KAAME,EAAMF,KAAMe,QAASb,EAAMd,KAAM4B,QAAS,kBAAMb,EAAS,CAACH,MAAK,KAASiB,aAAW,GAC9F,2BAAIf,EAAMD,UAGd,kBAAC,IAAD,CACEb,KAAK,SACLJ,UAAU,0BACVkC,QAlEE,SAACN,GACjBA,EAAEC,iBACFM,IAAMC,KAAKC,IAAIC,gBAAiB,CAACzB,MAAOC,EAAMD,QAC3C0B,MAAK,SAAAC,GAGJ,OAFArB,EAAS,CAACH,MAAM,EAAMZ,KAAK,UAAWa,QAAQuB,EAAIC,KAAKxB,UACvDyB,YAAW,kBAAMvB,EAAS,CAACH,MAAK,EAAOZ,KAAK,UAAWa,QAAQ,SAAO,OAC/DuB,EAAIC,KAAKE,SAAUD,YAAW,kBAAO/B,EAAMiC,QAAQC,KAAK,kBAAiB,QAEjFC,OAAM,SAAAC,GACL5B,EAAS,CAAEH,MAAM,EAAMZ,KAAM,SAAUa,QAAS8B,EAAMC,SAASP,KAAKxB,UACpEyB,YAAW,WAAOvB,EAAS,CAAEH,MAAM,EAAOZ,KAAM,UAAWa,QAAQ,OAAO,UAqDlE","file":"static/js/20.256ed4f4.chunk.js","sourcesContent":["import React from 'react';\nimport { Form } from 'react-bootstrap';\n\nfunction InputFrom ({ LabelId, TypeName, LabelTitle, Name, Value, Placeholder, ClassName, handleOnchange }) {\n    return (\n        <Form.Group className = {ClassName}>\n            <Form.Label htmlFor = {LabelId} > {LabelTitle} </Form.Label>\n            <Form.Control type = {TypeName} id = {LabelId} name={Name} value={Value || ''} placeholder={Placeholder} onChange = {handleOnchange} />\n        </Form.Group>\n    )\n}\n\n//Select From Components\nfunction SelectFrom({ LabelTitle, Value, categories, handleOnchange}) {\n    return (\n        <Form.Group>\n            <Form.Label> {LabelTitle} </Form.Label>\n            <Form.Control name=\"category_id\" as=\"select\" value={Value} onChange={handleOnchange}>\n                    <option value = {0}> Select Category </option>\n                    {(categories === undefined) ? [] : categories.map((element, index) => (\n                        <option\n                            key = {index}\n                            id = {index}\n                            value = {element.id}\n                        >\n                            {element.category}\n                        </option>\n                    ))}\n            </Form.Control>\n      </Form.Group>\n     )\n }\n\n\nexport {\n    InputFrom,\n    SelectFrom\n}\n","import React, { useState } from \"react\";\nimport \"./assets/css/auth.css\";\nimport { Container, Row, Col, Form } from \"react-bootstrap\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport axios from 'axios';\nimport { URL } from '../../constants/config';\nimport {Button, Alert} from 'react-bootstrap'\nimport { InputFrom } from \"../../components/FromComponents/InputComponent\";\nimport PageLoader from \"../../components/pageLoader/PageLoaderComponent\";\nimport Logo from '../../assets/images/logo.png';\n\nconst ForgotPassword = (props) => {\n  const [state, setState] = useState({ email: '', });\n  const [alert, setAlert] = useState({ show: false, type: 'unknown', message: '' })\n  \n  const handleOnchange = (e) => {\n    e.preventDefault()\n    setState({...state,[e.target.name]: e.target.value})\n  };\n  \n  const handleOnClick = (e) =>{\n        e.preventDefault();\n        axios.post(URL._RESET_PASSWORD, {email: state.email})\n          .then(res => {\n            setAlert({show: true, type:\"success\", message:res.data.message});\n            setTimeout(() => setAlert({show:false, type:\"unknown\", message:null}),2000);\n            return res.data.success ? setTimeout(() => (props.history.push(\"/verify-code\")),2000) : false;\n            })\n          .catch(error => {\n            setAlert({ show: true, type: 'danger', message: error.response.data.message })\n            setTimeout(() => {setAlert({ show: false, type: 'unknown', message:''})}, 3000)\n          })\n    }\n\n  return (\n    <>\n      <PageLoader loading={false} />\n      <div className=\"AllWrapper fullHeight\">\n        <header className=\"header authHeader clearfix\" id=\"header\">\n          <Container fluid={true}>\n            <Row>\n              <Col sm={6}>\n                <div className=\"logoWrapper mt-4 mb-4\">\n                  <h1 className=\"logoText\">\n                    <Link to=\"/\"><img loading=\"lazy\" src={Logo} style={{width:\"300px\"}} /></Link>\n                  </h1>\n                </div>\n              </Col>\n            </Row>\n          </Container>\n        </header>\n\n        <main\n          className=\"loginMainArea clearfix fullHeight bgImage loginBodyBg pb-4\"\n          id=\"loginArea\"\n        >\n          <Container fluid={true}>\n            <Row>\n              <Col sm={4}>\n                <div className=\"loginBodyContent clearfix mb-4\" id=\"loginBody\">\n                  <h2 className=\"headTitle mb-3\">Forgot password?</h2>\n                  <h5>\n                    Lorem ipsum dolor sit ament, consecrator advising elite, sed\n                    do elusion temporal incipient\n                  </h5>\n                </div>\n\n                <div className=\"formWrapper clearfix\" id=\"formWrapper\">\n                  <Form>\n                    <InputFrom\n                      LabelId=\"email\"\n                      TypeName=\"email\"\n                      LabelTitle=\"Email\"\n                      Name=\"email\"\n                      Value={state.email}\n                      Placeholder=\"Enter Your Email\"\n                      handleOnchange={handleOnchange}\n                    />\n                   \n                      <Alert show={alert.show} variant={alert.type} onClose={() => setAlert({show:false})} dismissible>\n                        <p>{alert.message}</p>\n                      </Alert>\n                    \n                    <Button\n                      type=\"submit\"\n                      className=\"btn mt-2 mb-3 submitBtn\"\n                      onClick={handleOnClick}\n                    >\n                      SEND CODE\n                    </Button>\n                  </Form>\n                </div>\n              </Col>\n            </Row>\n          </Container>\n        </main>\n      </div>\n    </>\n  );\n};\n\nexport default withRouter(ForgotPassword);\n"],"sourceRoot":""}