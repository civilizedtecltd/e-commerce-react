{"version":3,"sources":["components/FromComponents/InputComponent.jsx","pages/auth/changePassword.jsx"],"names":["InputFrom","LabelId","TypeName","LabelTitle","Name","Value","Placeholder","ClassName","handleOnchange","Group","className","Label","htmlFor","Control","type","id","name","value","placeholder","onChange","withRouter","props","code","useParams","useState","verifyCode","password","confirmPassword","state","setState","show","message","alert","setAlert","e","preventDefault","target","loading","fluid","sm","to","onSubmit","console","log","axios","post","URL","_RECOVER_PASSWORD","then","res","data","setTimeout","success","history","push","catch","error","response","variant","onClose","dismissible"],"mappings":"yHAAA,+DAGA,SAASA,EAAT,GAA6G,IAAvFC,EAAsF,EAAtFA,QAASC,EAA6E,EAA7EA,SAAUC,EAAmE,EAAnEA,WAAYC,EAAuD,EAAvDA,KAAMC,EAAiD,EAAjDA,MAAOC,EAA0C,EAA1CA,YAAaC,EAA6B,EAA7BA,UAAWC,EAAkB,EAAlBA,eACtF,OACI,kBAAC,IAAKC,MAAN,CAAYC,UAAaH,GACrB,kBAAC,IAAKI,MAAN,CAAYC,QAAWX,GAAvB,IAAmCE,EAAnC,KACA,kBAAC,IAAKU,QAAN,CAAcC,KAAQZ,EAAUa,GAAMd,EAASe,KAAMZ,EAAMa,MAAOZ,GAAS,GAAIa,YAAaZ,EAAaa,SAAYX,O,2NCkGlHY,uBAhGQ,SAACC,GACtB,IAAQC,EAASC,cAATD,KACR,EAA0BE,mBAAS,CAACC,WAAYH,EAAMI,SAAU,GAAIC,gBAAiB,KAArF,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0BL,mBAAS,CAAEM,MAAM,EAAOhB,KAAK,UAAWiB,QAAS,KAA3E,mBAAOC,EAAP,KAAcC,EAAd,KAEMzB,EAAiB,SAAC0B,GACtBA,EAAEC,iBACFN,EAAS,2BAAID,GAAL,kBAAaM,EAAEE,OAAOpB,KAAOkB,EAAEE,OAAOnB,UAoBhD,OACE,oCACE,kBAAC,IAAD,CAAYoB,SAAS,IACrB,yBAAK3B,UAAU,yBACb,4BAAQA,UAAU,6BAA6BK,GAAG,UAChD,kBAAC,IAAD,CAAWuB,OAAO,GAChB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,GAAI,GACP,yBAAK7B,UAAU,yBACb,wBAAIA,UAAU,YACZ,kBAAC,OAAD,CAAM8B,GAAG,KAAT,cAOZ,0BACE9B,UAAU,wDACVK,GAAG,kBAEH,kBAAC,IAAD,CAAWuB,OAAO,GAChB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,GAAI,GACP,yBAAK7B,UAAU,iCAAiCK,GAAG,aACjD,wBAAIL,UAAU,kBAAd,wBACA,2HAKF,yBAAKA,UAAU,uBAAuBK,GAAG,eACvC,kBAAC,IAAD,CAAM0B,SAjDD,SAACP,GACpBA,EAAEC,iBACFO,QAAQC,IAAIf,GACZgB,IAAMC,KAAKC,IAAIC,kBAAmBnB,GAC/BoB,MAAK,SAAAC,GACJhB,EAAS,CAAEH,MAAM,EAAMC,QAASkB,EAAIC,KAAKnB,QAASjB,KAAM,YACxDqC,YAAW,WAET,OADAlB,EAAS,CAAEH,MAAM,EAAMC,QAASkB,EAAIC,KAAKnB,QAASjB,KAAM,cACjDmC,EAAIC,KAAKE,SAAU/B,EAAMgC,QAAQC,KAAK,YAC7C,QAEDC,OAAM,SAAAC,GAEP,OADAvB,EAAS,CAAEH,MAAM,EAAMhB,KAAM,SAAUiB,QAASyB,EAAMC,SAASP,KAAKnB,UAC7DoB,WAAWlB,EAAS,CAAEH,MAAM,EAAMC,QAAS,GAAIjB,KAAM,YAAc,UAqC9D,kBAAC,IAAD,CACEb,QAAQ,aACRC,SAAS,WACTC,WAAW,kBACXC,KAAK,WACLE,YAAY,kBACZE,eAAgBA,IAGlB,kBAAC,IAAD,CACEP,QAAQ,cACRC,SAAS,WACTC,WAAW,mBACXC,KAAK,kBACLE,YAAY,mBACZE,eAAgBA,IAGjBwB,EAAMF,KAAQ,kBAAC,IAAD,CAAOA,KAAME,EAAMF,KAAM4B,QAAS1B,EAAMlB,KAAM6C,QAAS,kBAAM1B,EAAS,CAAEH,MAAM,KAAU8B,aAAW,GAC9G,2BAAI5B,EAAMD,UAGZ,GAEF,kBAAC,IAAD,CAAQjB,KAAK,SAASJ,UAAU,2BAAhC","file":"static/js/22.398ff0e0.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Form } from 'react-bootstrap';\r\n\r\nfunction InputFrom ({ LabelId, TypeName, LabelTitle, Name, Value, Placeholder, ClassName, handleOnchange }) {\r\n    return (\r\n        <Form.Group className = {ClassName}>\r\n            <Form.Label htmlFor = {LabelId} > {LabelTitle} </Form.Label>\r\n            <Form.Control type = {TypeName} id = {LabelId} name={Name} value={Value || ''} placeholder={Placeholder} onChange = {handleOnchange} />\r\n        </Form.Group>\r\n    )\r\n}\r\n\r\n//Select From Components\r\nfunction SelectFrom({ LabelTitle, Value, categories, handleOnchange}) {\r\n    return (\r\n        <Form.Group>\r\n            <Form.Label> {LabelTitle} </Form.Label>\r\n            <Form.Control name=\"category_id\" as=\"select\" value={Value} onChange={handleOnchange}>\r\n                    <option value = {0}> Select Category </option>\r\n                    {(categories === undefined) ? [] : categories.map((element, index) => (\r\n                        <option\r\n                            key = {index}\r\n                            id = {index}\r\n                            value = {element.id}\r\n                        >\r\n                            {element.category}\r\n                        </option>\r\n                    ))}\r\n            </Form.Control>\r\n      </Form.Group>\r\n     )\r\n }\r\n\r\n\r\nexport {\r\n    InputFrom,\r\n    SelectFrom\r\n}\r\n","import React, { useState } from \"react\";\r\nimport axios from 'axios';\r\nimport { Link, useParams, withRouter } from \"react-router-dom\";\r\nimport { Container, Row, Col, Form, Button, Alert } from \"react-bootstrap\";\r\nimport { URL } from \"../../constants/config\";\r\nimport { InputFrom } from \"../../components/FromComponents/InputComponent\";\r\nimport PageLoader from \"../../components/pageLoader/PageLoaderComponent\";\r\nimport \"./assets/css/auth.css\";\r\n\r\nconst ChangePassword = (props) => {\r\n  const { code } = useParams()\r\n  const [state, setState] = useState({verifyCode: code, password: \"\", confirmPassword: \"\"});\r\n  const [alert, setAlert] = useState({ show: false, type:'unknown', message: \"\" });\r\n  \r\n  const handleOnchange = (e) => {\r\n    e.preventDefault()\r\n    setState({...state, [e.target.name]: e.target.value })\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    console.log(state)\r\n    axios.post(URL._RECOVER_PASSWORD, state)\r\n      .then(res => {\r\n        setAlert({ show: true, message: res.data.message, type: 'success' });\r\n        setTimeout(() => {\r\n          setAlert({ show: true, message: res.data.message, type: 'unknown'})\r\n          return res.data.success ? props.history.push(\"/login\") : false;\r\n        },3000)\r\n           \r\n      }).catch(error => {\r\n        setAlert({ show: true, type: 'danger', message: error.response.data.message })\r\n        return setTimeout(setAlert({ show: true, message: '', type: 'Unknown' }), 3000);\r\n      })\r\n  }\r\n  \r\n  return (\r\n    <>\r\n      <PageLoader loading={false} />\r\n      <div className=\"allWrapper fullHeight\">\r\n        <header className=\"header authHeader clearfix\" id=\"header\">\r\n          <Container fluid={true}>\r\n            <Row>\r\n              <Col sm={6}>\r\n                <div className=\"logoWrapper mt-4 mb-4\">\r\n                  <h1 className=\"logoText\">\r\n                    <Link to=\"/\">LOGO</Link>\r\n                  </h1>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </header>\r\n        <main\r\n          className=\"loginMainArea clearfix fullHeight bgImage loginBodyBg\"\r\n          id=\"changepassBody\"\r\n        >\r\n          <Container fluid={true}>\r\n            <Row>\r\n              <Col sm={4}>\r\n                <div className=\"loginBodyContent clearfix mb-4\" id=\"loginBody\">\r\n                  <h2 className=\"headTitle mb-3\">Enter a new password</h2>\r\n                  <h5>\r\n                    Lorem ipsum dolor sit ament, consecrator advising elite, sed\r\n                    do elusion temporal incipient\r\n                  </h5>\r\n                </div>\r\n                <div className=\"formWrapper clearfix\" id=\"formWrapper\">\r\n                  <Form onSubmit={handleSubmit}>\r\n                    <InputFrom\r\n                      LabelId=\"createPass\"\r\n                      TypeName=\"password\"\r\n                      LabelTitle=\"Create Password\"\r\n                      Name=\"password\"\r\n                      Placeholder=\"Create Password\"\r\n                      handleOnchange={handleOnchange}\r\n                    />\r\n\r\n                    <InputFrom\r\n                      LabelId=\"confirmPass\"\r\n                      TypeName=\"password\"\r\n                      LabelTitle=\"Confirm password\"\r\n                      Name=\"confirmPassword\"\r\n                      Placeholder=\"Confirm password\"\r\n                      handleOnchange={handleOnchange}\r\n                    />\r\n\r\n                    {alert.show ? (<Alert show={alert.show} variant={alert.type} onClose={() => setAlert({ show: false })} dismissible >\r\n                        <p>{alert.message}</p>\r\n                      </Alert>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                    <Button type=\"submit\" className=\"btn mt-2 mb-3 submitBtn\"> Save </Button>\r\n                  </Form>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </main>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(ChangePassword);\r\n"],"sourceRoot":""}