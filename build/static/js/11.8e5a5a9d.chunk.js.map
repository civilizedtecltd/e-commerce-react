{"version":3,"sources":["components/MegaMenuComponents/MenuOptionComponents.jsx","components/MegaMenuComponents/MegaMenuComponent.jsx","components/offerPageComponents/NewBookComponent.jsx","pages/FavoritesPage.jsx"],"names":["MenuOptionComponents","props","useState","menu","setMenu","useEffect","abortController","AbortController","a","axios","get","URL","_GET_STAGE_FILTER","then","res","data","categories","fetchData","abort","map","m","i","Col","sm","key","className","category","stage","item","index","Title","Url","id","MegaMenu","connect","state","favorite","bookId","BookImage","ProductTitle","AuthorName","ProductPrice","ImageBg","isFev","removeFavItem","stateFav","once","height","src","alt","style","width","to","onClick","bind","cart","shop","dispatch","showAllFavItem","showFavItems","totalCartItems","length","totalFavoriteItems","items","favoriteItems","removeFavoriteItem","loading","pending","favorite_item","cartItem","xs","Body","cover_images","img_1","name","book_author","price"],"mappings":"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","file":"static/js/11.8e5a5a9d.chunk.js","sourcesContent":["import React, {useState, useEffect } from 'react'\nimport { Col } from 'react-bootstrap'\nimport { Lia } from \"../LiComponent/CommonLiComponent\";\nimport { URL } from '../../constants/config'\nimport axios from 'axios'\nconst MenuOptionComponents = props => {\n  const [menu, setMenu] = useState([]);\n    useEffect(() => {\n       const abortController = new AbortController();\n    const fetchData = async () => {\n      await axios\n        .get(URL._GET_STAGE_FILTER)\n        .then(res => setMenu(res.data.categories));\n    };\n        fetchData();\n        return () => {\n          abortController.abort();\n        };\n  }, []);\n  return (\n    <>\n          {menu ? menu.map((m, i) => {\n              return (\n                <Col sm=\"3\" key={i}>\n                  <h3 className=\"cardWidgetTitle mb-3\">{m.category}</h3>\n                  <ul className={`cardWidgetList ${i===1? \"cardWidgetList2\" : \"\"} text-center`}>\n                    {m.stage\n                      ? m.stage.map((item, index) => {\n\n                          return (\n                            <Lia\n                              key={`primary-${index}`}\n                              Title={item.stage}\n                              Url={`/shop/filter/category/${m.id}/stage/${item.id}`}\n                            />\n                          );\n                        })\n                      : \"\"}\n                  </ul>\n                </Col>\n              );}) : \"\"}\n            </>\n  );\n};\nexport default MenuOptionComponents;\n","import React from 'react';\nimport MenuOptionComponents from \"./MenuOptionComponents\";\nconst MegaMenu = () => {\n    return (\n      <>\n        <MenuOptionComponents />\n      </>\n    );\n};\n\nexport default MegaMenu;\n","import React from 'react';\nimport{Link} from 'react-router-dom'\nimport {Col, Card, Image} from 'react-bootstrap';\nimport LazyLoad from 'react-lazyload';\nimport '../../assets/css/theme.css'\nimport { connect } from 'react-redux';\nconst NewBookComponent = ({bookId, BookImage, ProductTitle, AuthorName, ProductPrice, ImageBg ,isFev = false , removeFavItem , stateFav, favorite }) => {\n\n\n  const imgStyle = {\n        width:\"163px\",\n    }\n  const handleRemove = (bookId) => {\n    removeFavItem(bookId)\n  }\n\n\n    return(\n        <Col className=\"col-auto\">\n            <LazyLoad once={true} height={200}>\n                <Card className=\"productCard border-0 bg-transparent\">\n                    <div className={`productMedia mb-3 ${ImageBg}`}>\n                        <Image src={BookImage} alt=\"Book Image\" style={imgStyle} />\n                    </div>\n                    <div className=\"productContent\">\n                        <Link to={`/product/${bookId}`}><h4 className=\"productTitle limit-character mb-1\" >{ProductTitle} {(isFev === true) ?<span className=\"favoritIcon\"><i className=\"fas fa-star\"></i></span> :''}</h4></Link>\n                        <h5 className=\"authorName mb-1\">{AuthorName}</h5>\n                        <p className=\"productPrice\">Ksh {ProductPrice}</p>\n                        <button  className=\"btn btn-danger\" onClick = { handleRemove.bind(this, bookId) }>Remove</button>\n                    </div>\n                </Card>\n            </LazyLoad>\n        </Col>)\n}\nconst mapStateToProps = (state) => {\n    return{\n        favorite: state.favorite\n    }\n}\n\n// const mapDispatchToProps = (dispatch) => {\n//     return{\n//         removeFavorite : (id)=>dispatch(removeFavItem(id))\n//     }\n// }\nexport default connect(mapStateToProps, null)(NewBookComponent);\n","import React, {useEffect } from \"react\";\nimport { Container, Row, Col, Card} from \"react-bootstrap\";\nimport { connect } from 'react-redux'\nimport NewBookComponent from \"../components/offerPageComponents/NewBookComponent\";\nimport { NewsLetterComponent } from \"../components/offerPageComponents/NewsLetterComponent\";\nimport FooterComponent from \"../components/FooterComponent/FooterComponent\";\nimport  HeaderComponent from \"../components/header/Header\";\nimport  MobileHeader from \"../components/header/MobileHeader\";\nimport BreadCrumb from \"../components/BreadCrumb/BreadCrumb\";\nimport { showFavItems, removeFavItem } from '../redux/actions/favoriteActions';\nimport './assets/favorite.css'\nimport PageLoader from \"../components/pageLoader/PageLoaderComponent\";\nimport MegaMenu from \"../components/MegaMenuComponents/MegaMenuComponent\";\n\nconst FavoritesPage = (props) => {\n    const totalCartItems = props.cart.length;\n    const totalFavoriteItems = props.favorite.items.length;\n    const favoriteItems = (totalFavoriteItems !== 0 )? props.favorite.items : [];\n\n    useEffect(() => {\n        const abortController = new AbortController();\n        props.showAllFavItem()\n          return () => {\n            abortController.abort();\n          };\n    },[]);\n\n    const removeFavoriteItem = (id) => props.removeFavItem(id);\n\n    return (\n        <>\n            <PageLoader loading={ props.favorite.pending}/>\n            <div className=\"allWrapper\">\n                <HeaderComponent\n                    favorite_item={totalFavoriteItems}\n                    cartItem={totalCartItems}\n                />\n                <MobileHeader\n                    favorite_item={totalFavoriteItems}\n                    cartItem={totalCartItems}\n                />\n                <main className=\"mainContent clearfix\" id=\"mainContent\">\n                    <section\n                        className=\"sectionBreadcrumb secGap clearfix pb-0\"\n                        id=\"sectionBreadcrumb\"\n                    >\n\n                        <Container>\n                            <Row>\n                                <Col>\n                                    <BreadCrumb />\n                                </Col>\n                            </Row>\n                        </Container>\n                    </section>\n                    { totalFavoriteItems === 0 ?\n                        <section className=\"chooseCategory clearfix\" id=\"chooseCategory\">\n                            <Container>\n                                <Row>\n                                    <Col xs={12}>\n                                        <div className=\"contentArea text-center mt-5 mb-5\">\n                                            <h2 className=\"sectionTitle mb-3\">\n                                                You don’t have any <span> Favorites</span>\n                                            </h2>\n\n                                            <p>\n                                                It’s not a problem. Just choose a category you’re\n                                                interested in and add goods to favorites list\n                                            </p>\n\n                                        </div>\n                                    </Col>\n                                </Row>\n\n                                <Row>\n                                    <Col>\n                                        <Card className=\"border-0\">\n                                            <Card.Body className=\"p-0\">\n                                                <div className=\"cardContentDetails pt-5 pb-5 mb-5 bgGray clearfix\">\n                                                    <Row>\n                                                        <MegaMenu/>\n                                                    </Row>\n                                                </div>\n                                            </Card.Body>\n                                        </Card>\n                                    </Col>\n                                </Row>\n                            </Container>\n                        </section>\n                        :\n\n                        <> <section\n                            className=\"favoritesItems secGap productView clearfix\"\n                            id=\"favoritesItems\"\n                        >\n                            <Container>\n                                <Row className=\"mt-5 mb-5 \">\n                                    { favoriteItems.map((item, index) => {\n                                        return(\n                                            <NewBookComponent\n                                                key={index}\n                                                bookId={item.id}\n                                                ImageBg=\"bgGray\"\n                                                BookImage={`${item.cover_images.img_1}`}\n                                                ProductTitle={ item.name }\n                                                AuthorName={ item.book_author.name }\n                                                ProductPrice={item.price}\n                                                isFev = { true }\n                                                removeFavItem = { removeFavoriteItem }\n                                            />\n                                        )} )}\n                                </Row>\n                            </Container>\n                        </section>\n\n\n                            <section\n                                className=\"mailSubscribe clearfix sectionBgImage sectionBgImg01 secGap\"\n                                id=\"mailSubscribe\"\n                            >\n                                <Container className=\"container\">\n                                    <NewsLetterComponent />\n                                </Container>\n                            </section>\n                        </>\n                    }\n                </main>\n\n                <FooterComponent />\n            </div>\n\n        </>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        cart: state.shop.cart,\n        favorite: state.favorite\n    }\n}\n\nconst mapDispatchToProps =(dispatch) => {\n    return {\n        showAllFavItem: () => dispatch(showFavItems()),\n        removeFavItem: (id) => dispatch(removeFavItem(id))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FavoritesPage);\n"],"sourceRoot":""}