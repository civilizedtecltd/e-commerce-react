{"version":3,"sources":["components/FromComponents/InputComponent.jsx","constants/firebase-config.js","constants/authMethods.js","services/socialAuth.js","components/oAuth/OAuth.jsx","components/authComponents/SocialListComponent.jsx","pages/auth/Login.jsx"],"names":["InputFrom","LabelId","TypeName","LabelTitle","Name","Value","Placeholder","ClassName","handleOnchange","Group","className","Label","htmlFor","Control","type","id","name","value","placeholder","onChange","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","facebookProvider","auth","FacebookAuthProvider","googleProvider","GoogleAuthProvider","firebaseAuth","provider","Promise","resolve","reject","signInWithPopup","then","res","user","catch","error","socialAuth","a","providerData","providerId","uid","displayName","email","phone","phoneNumber","photo","photoURL","console","log","connect","state","dispatch","login","data","OauthLogin","signup","Oauth","OauthSignUp","emptyStatus","showAllFavItem","showFavItems","props","handleOnClick","userInfo","onClick","SocialListComponent","withRouter","status","login_success","jwt","token","login_status","success","removeError","useState","show","message","alert","setAlert","password","setData","previewsLocation","useLastLocation","lastPath","pathname","history","location","useEffect","match","push","goBack","e","preventDefault","target","loading","fluid","sm","to","alt","src","Logo","style","width","onSubmit","variant","onClose","dismissible"],"mappings":"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","file":"static/js/7.c2f7f6da.chunk.js","sourcesContent":["import React from 'react';\nimport { Form } from 'react-bootstrap';\n\nfunction InputFrom ({ LabelId, TypeName, LabelTitle, Name, Value, Placeholder, ClassName, handleOnchange }) {\n    return (\n        <Form.Group className = {ClassName}>\n            <Form.Label htmlFor = {LabelId} > {LabelTitle} </Form.Label>\n            <Form.Control type = {TypeName} id = {LabelId} name={Name} value={Value || ''} placeholder={Placeholder} onChange = {handleOnchange} />\n        </Form.Group>\n    )\n}\n\n//Select From Components\nfunction SelectFrom({ LabelTitle, Value, categories, handleOnchange}) {\n    return (\n        <Form.Group>\n            <Form.Label> {LabelTitle} </Form.Label>\n            <Form.Control name=\"category_id\" as=\"select\" value={Value} onChange={handleOnchange}>\n                    <option value = {0}> Select Category </option>\n                    {(categories === undefined) ? [] : categories.map((element, index) => (\n                        <option\n                            key = {index}\n                            id = {index}\n                            value = {element.id}\n                        >\n                            {element.category}\n                        </option>\n                    ))}\n            </Form.Control>\n      </Form.Group>\n     )\n }\n\n\nexport {\n    InputFrom,\n    SelectFrom\n}\n","// Import the functions you need from the SDKs you need\n\n\n\nimport firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\n\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDzvHSi0kpxiFxCXmEbnWuaape_jWAhuDU\",\n  authDomain: \"abookstore-d5215.firebaseapp.com\",\n  projectId: \"abookstore-d5215\",\n  storageBucket: \"abookstore-d5215.appspot.com\",\n  messagingSenderId: \"591873202424\",\n  appId: \"1:591873202424:web:c5faa8ddde0f95ca62830d\",\n  measurementId: \"G-SPE09YV8D4\"\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase;","import firebase from './firebase-config';\n\nexport const facebookProvider = new firebase.auth.FacebookAuthProvider();\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();","import firebase from \"../constants/firebase-config\";\n\nconst firebaseAuth = (provider) => {\n    return new Promise((resolve, reject) => {\n        firebase\n            .auth()\n            .signInWithPopup(provider)\n            .then((res) => {\n                return resolve(res.user);\n            }).catch( (error) => {\n                return reject(error);\n            });\n    });\n}\n\n\nconst socialAuth = async (provider) => {\n    try {\n        const { providerData } = await firebaseAuth(provider);\n        \n        return {\n            provider: providerData[0].providerId,\n            id: providerData[0].uid,\n            name: providerData[0].displayName,\n            email: providerData[0].email,\n            phone: providerData[0].phoneNumber,\n            photo: providerData[0].photoURL \n        }\n        \n    } catch (error) {\n        console.log(error);\n        return null;\n    }\n\n}\n\nexport default socialAuth;","import React from 'react';\nimport { connect } from 'react-redux';\n//import { FacebookSignIn, GoogleSignIn } from \"google-facebook-signin-react\";\nimport { FacebookLoginButton, GoogleLoginButton } from 'react-social-login-buttons';\nimport { OauthLogin, emptyStatus, OauthSignUp } from '../../redux/actions/authActions';\nimport { showFavItems } from '../../redux/actions/favoriteActions';\n\nimport { googleProvider, facebookProvider } from '../../constants/authMethods';\nimport socialAuth from '../../services/socialAuth';\n\nconst OAuth = (props) => {\n    const handleOnClick = async (provider) => {\n        const userInfo =  await socialAuth(provider);\n                \n        if(userInfo){\n            console.log(userInfo);\n            props.login(userInfo);\n        }\n    }\n\n    return (\n        <div>            \n            <FacebookLoginButton onClick={()=> handleOnClick(facebookProvider)} />\n            <GoogleLoginButton onClick={() => handleOnClick(googleProvider)} />\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    auth: state.auth,\n})\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        login: (data) => dispatch(OauthLogin(data)),\n        signup: (Oauth) => dispatch(OauthSignUp(Oauth)),\n        emptyStatus: () => dispatch(emptyStatus()),\n        showAllFavItem: () => dispatch(showFavItems()),\n   }\n}\nexport default connect(mapStateToProps,mapDispatchToProps)(OAuth);\n","import React from \"react\";\nimport OAuth from '../oAuth/OAuth'\nexport default function SocialListComponent() {\n  return (\n    <div className=\"loginBodyContent clearfix\" id=\"loginBody\">\n      <h2 className=\"headTitle\">Login to Your Account</h2>\n      <div className=\"socialLogin mb-4\">\n        <ul className=\"socialList mt-4 mb-4\" >\n          <OAuth />\n        </ul>\n        <h4>OR</h4>\n      </div>\n    </div>\n  );\n}","import React, { useState, useEffect } from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { useLastLocation } from 'react-router-last-location';\nimport { connect } from 'react-redux';\nimport { login, emptyStatus } from '../../redux/actions/authActions';\nimport { showFavItems } from '../../redux/actions/favoriteActions';\nimport { Container, Row, Col, Form, Alert, Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport SocialListComponent from '../../components/authComponents/SocialListComponent';\nimport { InputFrom } from '../../components/FromComponents/InputComponent';\nimport PageLoader from \"../../components/pageLoader/PageLoaderComponent\";\nimport './assets/css/auth.css';\nimport '../../assets/css/animate.css';\nimport Logo from '../../assets/images/logo.png'\n\n\nconst Login = (props) => {\n\n  const [alert, setAlert] = useState({ show: false, type: '', message: '' });\n  const [data, setData] = useState({ email: null, password: null })\n  const previewsLocation = useLastLocation();\n  const lastPath = previewsLocation ? previewsLocation.pathname : '/';\n  const { auth, login, showAllFavItem, error, removeError, login_success, history, login_status, location } = props\n\n  const logInSuccess =()=>{\n    if (login_success) {\n\n        if (lastPath === '/signup' || lastPath.match(\"/change-password/\")) {\n          setAlert({ show: true, type: 'success', message: 'You are logged in' })\n            showAllFavItem()\n           history.push('/profile-settings');\n        }\n        else if (!lastPath) {\n            showAllFavItem()\n           history.push('/profile-settings');\n        }\n        else {\n            showAllFavItem()\n           history.goBack()\n        }\n      }\n      if (error) {\n        setAlert({ show: true, type: 'danger', message: error.message })\n        removeError()\n      }\n  }\n\n  useEffect(() => {\n    logInSuccess()\n  }, [auth.status.error, error, removeError, login_success, lastPath, history, login_status, location, showAllFavItem])\n\n\n  const handleOnchange = (e) => {\n    e.preventDefault()\n    return setData({ ...data, [e.target.name]: e.target.value })\n  }\n\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    if (!data.email && !data.password) {\n      return setAlert({ show: true, type: 'danger', message: \"Password and Email required\" })\n    }\n    if (!data.email || data.email === '')\n      return setAlert({ show: true, type: 'danger', message: \"Mail should not be empty\" })\n    else if (!data.password || data.password === '')\n      return setAlert({ show: true, type: 'danger', message: \"Password should not be empty\" })\n    else {\n      login(data)\n    }\n  }\n\n  return (\n    <>\n      <PageLoader loading={false} />\n      <div className=\"AllWrapper fullHeight\">\n        <main\n          className=\"loginMainArea clearfix fullHeight bgImage loginBodyBg pb-4\"\n          id=\"loginBody\"\n        >\n          <Container fluid={true}>\n            <Row>\n              <Col sm={6}>\n                <div className=\"logoWrapper mt-4 mb-4\">\n                  <h1 className=\"logoText\">\n                    <Link to=\"/\"><img loading=\"lazy\" alt={'Logo'} src={Logo} style={{width:\"100px\"}} /></Link>\n                  </h1>\n                </div>\n              </Col>\n            </Row>\n\n            <Row>\n              <Col sm={6}>\n                <SocialListComponent />\n\n                <div className=\"formWrapper clearfix\" id=\"formWrapper\">\n                  <Form onSubmit={handleSubmit}>\n                    <InputFrom\n                      LabelId  =\"email\"\n                      TypeName =\"email\"\n                      LabelTitle =\"Email\"\n                      Name =\"email\"\n                      Value = {data.email}\n                      Placeholder=\"Enter Your Email\"\n                      handleOnchange={handleOnchange}\n                    />\n\n                    <InputFrom\n                      LabelId=\"password\"\n                      TypeName=\"password\"\n                      LabelTitle=\"Password\"\n                      Name=\"password\"\n                      Value = {data.password}\n                      Placeholder=\"Enter Your Password\"\n                      handleOnchange={handleOnchange}\n                    />\n\n                    <Link className=\"linkText mb-3\" to=\"/forgot-password\">\n                      Forgot password?\n                    </Link>\n                    <Alert show={alert.show} variant={alert.type} onClose={() => setAlert({ ...alert, show: false })} dismissible>\n                      <p>{alert.message}</p>\n                    </Alert>\n\n                    <Button type=\"submit\" className=\"btn submitBtn mb-3 \" >Sign In</Button>\n                    <p>\n                      Don’t have an account yet? &nbsp; <Link className=\"linkText\" to=\"/signup\">Sign up</Link>\n                    </p>\n                  </Form>\n                </div>\n              </Col>\n            </Row>\n          </Container>\n        </main>\n      </div>\n    </>\n  );\n}\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  error: state.auth.status.error ? (state.auth.status.error.data) : false,\n  login_success: state.auth.jwt ? state.auth.jwt.token : false,\n  login_status: state.auth.status ? state.auth.status.success : false\n});\nconst mapDispatchToProps = dispatch => ({\n  login: (data) => dispatch(login(data)),\n  showAllFavItem: () => dispatch(showFavItems()),\n  removeError: () => dispatch(emptyStatus())\n});\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Login));\n"],"sourceRoot":""}