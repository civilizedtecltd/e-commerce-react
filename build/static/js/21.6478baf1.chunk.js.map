{"version":3,"sources":["components/FromComponents/InputComponent.jsx","pages/auth/VerifyCode.jsx"],"names":["InputFrom","LabelId","TypeName","LabelTitle","Name","Value","Placeholder","ClassName","handleOnchange","Group","className","Label","htmlFor","Control","type","id","name","value","placeholder","onChange","withRouter","props","useState","code","state","setState","show","message","alert","setAlert","loading","fluid","sm","to","e","preventDefault","target","variant","onClose","dismissible","onClick","axios","post","URL","_VERIFICATION_CODE","then","res","data","setTimeout","success","history","push","catch","error","response"],"mappings":"yHAAA,+DAGA,SAASA,EAAT,GAA6G,IAAvFC,EAAsF,EAAtFA,QAASC,EAA6E,EAA7EA,SAAUC,EAAmE,EAAnEA,WAAYC,EAAuD,EAAvDA,KAAMC,EAAiD,EAAjDA,MAAOC,EAA0C,EAA1CA,YAAaC,EAA6B,EAA7BA,UAAWC,EAAkB,EAAlBA,eACtF,OACI,kBAAC,IAAKC,MAAN,CAAYC,UAAaH,GACrB,kBAAC,IAAKI,MAAN,CAAYC,QAAWX,GAAvB,IAAmCE,EAAnC,KACA,kBAAC,IAAKU,QAAN,CAAcC,KAAQZ,EAAUa,GAAMd,EAASe,KAAMZ,EAAMa,MAAOZ,GAAS,GAAIa,YAAaZ,EAAaa,SAAYX,O,ibCwFlHY,uBAvFI,SAACC,GAAW,IAAD,EACFC,mBAAS,CAAEC,KAAM,OADf,mBACrBC,EADqB,KACdC,EADc,OAEFH,mBAAS,CAAEI,MAAM,EAAOC,QAAS,KAF/B,mBAErBC,EAFqB,KAEdC,EAFc,KAyB5B,OACE,oCACE,kBAAC,IAAD,CAAYC,SAAS,IACrB,yBAAKpB,UAAU,yBACb,4BAAQA,UAAU,6BAA6BK,GAAG,UAChD,kBAAC,IAAD,CAAWgB,OAAO,GAChB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,GAAI,GACP,yBAAKtB,UAAU,yBACb,wBAAIA,UAAU,YACZ,kBAAC,OAAD,CAAMuB,GAAG,KAAT,cAOZ,0BACEvB,UAAU,wDACVK,GAAG,kBAEH,kBAAC,IAAD,CAAWgB,OAAO,GAChB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,GAAI,GACP,yBAAKtB,UAAU,iCAAiCK,GAAG,aACjD,wBAAIL,UAAU,kBAAd,eACA,2HAKF,yBAAKA,UAAU,uBAAuBK,GAAG,eACvC,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEd,QAAQ,aACRC,SAAS,OACTC,WAAW,cACXC,KAAK,OACLE,YAAY,cACZE,eA5DG,SAAC0B,GACtBA,EAAEC,iBACFV,E,yVAAS,CAAD,GAAMD,EAAN,eAAcU,EAAEE,OAAOpB,KAAOkB,EAAEE,OAAOnB,YA8D7B,kBAAC,IAAD,CAAOS,KAAME,EAAMF,KAAMW,QAAST,EAAMd,KAAMwB,QAAS,kBAAMT,EAAS,CAAEH,MAAM,KAAUa,aAAW,GACjG,2BAAIX,EAAMD,UAId,kBAAC,IAAD,CAAQb,KAAK,SAASJ,UAAU,0BAA0B8B,QAhEvD,SAACN,GACpBA,EAAEC,iBACFM,IAAMC,KAAKC,IAAIC,mBAAoBpB,GAChCqB,MAAK,SAAAC,GAGJ,OAFAjB,EAAS,CAAEH,MAAM,EAAMZ,KAAM,UAAWa,QAASmB,EAAIC,KAAKpB,UAC1DqB,YAAW,kBAAMnB,EAAS,CAAEH,MAAM,EAAOZ,KAAM,UAAWa,QAAS,OAAO,OACnEmB,EAAIC,KAAKE,SAAUD,YAAW,kBAAM3B,EAAM6B,QAAQC,KAAd,2BAAuC3B,EAAMD,SAAS,QAElG6B,OAAM,SAAAC,GACLxB,EAAS,CAAEH,MAAM,EAAMZ,KAAM,SAAUa,QAAS0B,EAAMC,SAASP,KAAKpB,UACpEqB,YAAW,WAAQnB,EAAS,CAAEH,MAAM,EAAOZ,KAAM,UAAWa,QAAS,OAAS,UAsDlE","file":"static/js/21.6478baf1.chunk.js","sourcesContent":["import React from 'react';\nimport { Form } from 'react-bootstrap';\n\nfunction InputFrom ({ LabelId, TypeName, LabelTitle, Name, Value, Placeholder, ClassName, handleOnchange }) {\n    return (\n        <Form.Group className = {ClassName}>\n            <Form.Label htmlFor = {LabelId} > {LabelTitle} </Form.Label>\n            <Form.Control type = {TypeName} id = {LabelId} name={Name} value={Value || ''} placeholder={Placeholder} onChange = {handleOnchange} />\n        </Form.Group>\n    )\n}\n\n//Select From Components\nfunction SelectFrom({ LabelTitle, Value, categories, handleOnchange}) {\n    return (\n        <Form.Group>\n            <Form.Label> {LabelTitle} </Form.Label>\n            <Form.Control name=\"category_id\" as=\"select\" value={Value} onChange={handleOnchange}>\n                    <option value = {0}> Select Category </option>\n                    {(categories === undefined) ? [] : categories.map((element, index) => (\n                        <option\n                            key = {index}\n                            id = {index}\n                            value = {element.id}\n                        >\n                            {element.category}\n                        </option>\n                    ))}\n            </Form.Control>\n      </Form.Group>\n     )\n }\n\n\nexport {\n    InputFrom,\n    SelectFrom\n}\n","import React, { useState } from 'react';\nimport { Container, Row, Col, Form, Alert, Button } from \"react-bootstrap\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport axios from 'axios';\nimport { URL } from \"../../constants/config\";\nimport { InputFrom } from '../../components/FromComponents/InputComponent';\nimport PageLoader from \"../../components/pageLoader/PageLoaderComponent\";\nimport './assets/css/auth.css';\nconst VerifyCode = (props) => {\n  const [state, setState] = useState({ code: null });\n  const [alert, setAlert] = useState({ show: false, message: \"\" });\n\n  const handleOnchange = (e) => {\n    e.preventDefault()\n    setState({ ...state, [e.target.name]: e.target.value })\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    axios.post(URL._VERIFICATION_CODE, state)\n      .then(res => {\n        setAlert({ show: true, type: \"success\", message: res.data.message });\n        setTimeout(() => setAlert({ show: false, type: \"unknown\", message: '' }), 3000);\n        return res.data.success ? setTimeout(() => props.history.push(`/change-password/${state.code}`), 2000) : false;\n      })\n      .catch(error => {\n        setAlert({ show: true, type: 'danger', message: error.response.data.message })\n        setTimeout(() => { setAlert({ show: false, type: 'unknown', message: '' }) }, 3000)\n      });\n    \n    \n    \n  }\n  return (\n    <>\n      <PageLoader loading={false} />\n      <div className=\"allWrapper fullHeight\">\n        <header className=\"header authHeader clearfix\" id=\"header\">\n          <Container fluid={true}>\n            <Row>\n              <Col sm={6}>\n                <div className=\"logoWrapper mt-4 mb-4\">\n                  <h1 className=\"logoText\">\n                    <Link to=\"/\">LOGO</Link>\n                  </h1>\n                </div>\n              </Col>\n            </Row>\n          </Container>\n        </header>\n        <main\n          className=\"loginMainArea clearfix fullHeight bgImage loginBodyBg\"\n          id=\"changepassBody\"\n        >\n          <Container fluid={true}>\n            <Row>\n              <Col sm={4}>\n                <div className=\"loginBodyContent clearfix mb-4\" id=\"loginBody\">\n                  <h2 className=\"headTitle mb-3\">Verify code</h2>\n                  <h5>\n                    Lorem ipsum dolor sit ament, consecrator advising elite, sed\n                    do elusion temporal incipient\n                  </h5>\n                </div>\n                <div className=\"formWrapper clearfix\" id=\"formWrapper\">\n                  <Form>\n                    <InputFrom\n                      LabelId=\"codeVerify\"\n                      TypeName=\"text\"\n                      LabelTitle=\"Verify Code\"\n                      Name=\"code\"\n                      Placeholder=\"Verify Code\"\n                      handleOnchange={handleOnchange}\n                    />\n\n                  \n                      <Alert show={alert.show} variant={alert.type} onClose={() => setAlert({ show: false })} dismissible>\n                        <p>{alert.message}</p>\n                      </Alert>\n                 \n\n                    <Button type=\"submit\" className=\"btn mt-2 mb-3 submitBtn\" onClick={handleSubmit}>\n                      Verify\n                    </Button>\n                  </Form>\n                </div>\n              </Col>\n            </Row>\n          </Container>\n        </main>\n      </div>\n    </>\n  );\n}\n\nexport default withRouter(VerifyCode);\n"],"sourceRoot":""}